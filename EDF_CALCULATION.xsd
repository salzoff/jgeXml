<?xml version="1.0" encoding="utf-8" ?>
<xs:schema xmlns="http://www.vilauma.de/edf/Calculation"
		   elementFormDefault="qualified"
		   targetNamespace="http://www.vilauma.de/edf/Calculation"
		   version="4.1.2"
		   xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:element name="CalculationRoot">
		<xs:annotation>
			<xs:documentation xml:lang="de">
Die Kalkulation besteht aus den beiden Komponenten "Regeln" und "Kalkulation".
Alle Regeln werden in dem Element "Restrictions" abgebildet. Jede Regel wird analog zu dem Veranstalter-System mit einer Priorität versehen. Je Pauschalkalkulation kann genau eine Regel zutreffen. Die Regel mit der höchsten Priorität wird angewendet.
Innerhalb einer Regel wird auf genau eine "Kalkulation" verwiesen. Der Verweis erfolgt über einen Kalkulationsnamen. 
Die eigentlichen Kalkulationswerte werden in dem Element "Calculations" abgebildet.
			</xs:documentation>
			<xs:documentation xml:lang="en">
The calculation is comprised of the two components Rules and Calculation.
All rules are shown in the Restrictions element. Each rule is assigned a priority that corresponds to the tour operator system. Exactly one rule may apply per package pricing. The rule with the highest priority will be applied.
Within one rule, exactly one "calculation" will be referenced. The reference is made by calculation name. 
The actual calculation values are shown in the Calculations element.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Exchanges" minOccurs="0" maxOccurs="1">
					<xs:annotation>
						<xs:documentation xml:lang="de">
Das Exchanges-Element ist eine Liste von Exchange-Elementen.
						</xs:documentation>
						<xs:documentation xml:lang="en">
The Exchanges element is a list of Exchange elements.
						</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Exchange" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation xml:lang="de">
Das Exchange-Element definiert einen Währungsumrechnungskurs.

Beispiel: 
Code: USD
Rate: 1.253
									</xs:documentation>
									<xs:documentation xml:lang="en">
The Exchange element defines a currency exchange rate.

Example: 
Code: USD
Rate: 1.253</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:attribute name="Rate" type="xs:double">
										<xs:annotation>
											<xs:documentation xml:lang="de">
In diesem Attribut wird der aktuelle Umrechnungskurs der Fremdwährung zu dem unter Currency angegeben Währung definiert.

Beispiel: Currency="EUR"
1 Euro = 1,256 USD

Rate= "1,256"
											</xs:documentation>
											<xs:documentation xml:lang="en">
This attribute specifies the current exchange rate of the foreign currency related to the currency indicated under Currency.

Example: Currency="EUR"
1 Euro = 1.256 USD

Rate= "1.256"</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="Code">
										<xs:annotation>
											<xs:documentation xml:lang="de">
Das Code-Attribut legt die Währung fest, für die der Umrechnungskurs gelten soll.
Die Währung wird als dreistelliger Währungscode nach ISO 4217 angegeben.
Beispiel: USD für US Dollar
											</xs:documentation>
											<xs:documentation xml:lang="en">
The attribute shows the currency for which the exchange rate should apply.
The currency is indicated by a three-digit currency code according to ISO 4217.
Example: USD for U.S. dollars
											</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:pattern value="[A-Z]{3}"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="SourcePriorities" minOccurs="0" maxOccurs="1">
					<xs:annotation>
						<xs:documentation xml:lang="de">
Das SourcePriorities-Element ist eine Liste von SourcePriority-Elementen.
						</xs:documentation>
						<xs:documentation xml:lang="en">
The SourcePriorities element is a list of SourcePriority elements.
						</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="SourcePriority" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation xml:lang="de">

Das Element SourcePriorities dient zur Festlegegung von Prioritäten der einzelnen Flugquellen oder Hotelquellen. Das Element ist optional.
Wenn Hin- und Rückflug unterschiedliche Sourcen haben, wird anhand der Prioritäten die Source zum Kalkulieren ermittelt. 
Wenn keine Prioritäten definiert sind, gewinnt immer der Hinflug.

Beispiel:
SourcePriorities
	SourcePriority ID=Quelle1 Priority=0 /
	SourcePriority ID=Quelle2 Priority=1 /
/SourcePriorities
									</xs:documentation>
									<xs:documentation xml:lang="en">
The SourcePriorities element specifies the priority of each flight and hotel source. The element is optional. 
It must be set, however, if for example, the flight package combines two inbound/outbound sources and 
two separate calculations apply. In such cases, a source must be prioritized. 

Example:
SourcePriorities
	SourcePriority ID=Published Priority=0 /
	SourcePriority ID=ABIS Priority=1 /
/SourcePriorities</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:attribute name="ID" type="xs:string">
										<xs:annotation>
											<xs:documentation xml:lang="de">
Das ID-Attribut legt die Quelle eines Fluges oder Hotels fest.
											</xs:documentation>
											<xs:documentation xml:lang="en">
The ID attribute specifies the source of a flight or a hotel.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="Priority">
										<xs:annotation>
											<xs:documentation xml:lang="de">
Das Priority-Attribut legt die Priorität fest, wobei die höchste Zahl der höchsten Priorität entspricht.

Beispiel:
SourcePriorities
	SourcePriority ID=Published Priority=0 /
	SourcePriority ID=ABIS Priority=1 /
/SourcePriorities

Die Kalkulation mit der Source ABIS hat eine höhere Priorität.
											</xs:documentation>
											<xs:documentation xml:lang="en">
The Priority attribute specifies the priority; the higher the value, the higher the priority.

Example:
SourcePriorities
	SourcePriority ID=Published Priority=0 /
	SourcePriority ID=ABIS Priority=1 /
/SourcePriorities

The calculation based on the ABIS source has a higher priority.</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:integer">
												<xs:minInclusive value="0"/>
												<xs:maxInclusive value="65535"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="ApplyToMode">
										<xs:annotation>
											<xs:documentation xml:lang="de">
Das Attribut ApplyToMode kennzeichnet, ob es sich bei der unter ID genannten Quelle um eine Hotel- oder Flugquelle handelt.

Mögliche Werte:
* Hotel
* Flight
											</xs:documentation>
											<xs:documentation xml:lang="en">
The ApplyToMode attribute identifies, whether the source specified under ID is a hotel or a flight source.

Possible values:
* Hotel
* Flight
											</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="ApplyToModeEnum">
												<xs:enumeration value="Flight" />
												<xs:enumeration value="Hotel" />
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="Conflict" type="ConflictEnum">
							<xs:annotation>
								<xs:documentation xml:lang="de">Mögliche Werte:
* Outbound (Default): Eine Rule mit einer bestimmten Source ist gültig, auch wenn nur der Outbound von dieser Source ist. Der Inbound muss nicht zwingend die gleiche Source haben. D.h. Der Hinflug gewinnt bei gleichen Prioritäten und unterschiedlichen Sourcen.
* None: Hin- und Rückflug müssen die gleiche Source haben, damit eine Rule auf Sourceebene gültig ist.
								</xs:documentation>
								<xs:documentation xml:lang="en">
Possible values:
* Outbound (default): A rule with a certain source is valid, even when only the outbound flight comes from the specified source. The source of the inbound flight doesn't matter. This means: with identical priorities and different sources, the outbound flight "wins".
* None: Outbound and inbound flight must have the same source, otherwise the rule cannot be valid on source level.
								</xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<xs:element name="PersonTypeDefinitions" minOccurs="0" maxOccurs="1">
					<xs:annotation>
						<xs:documentation xml:lang="de">
Das PersonTypeDefinitions-Element ist eine Liste von PersonTypeDefinition-Elementen.
						</xs:documentation>
						<xs:documentation xml:lang="en">
The PersonTypeDefinitions element is a list of PersonTypeDefinition elements.
						</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="PersonTypeDefinition" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation xml:lang="de">
<![CDATA[Das PersonTypeDefinition-Element definiert global Personengruppen.

Beispiel:
<PersonTypeDefinitions>
    <PersonTypeDefinition Type="A" MinAge="13" MaxAge="255" />
    <PersonTypeDefinition Type="C" MinAge="2" MaxAge="12" />
    <PersonTypeDefinition Type="I" MinAge="0" MaxAge="1" />
</PersonTypeDefinitions> ]]>
									</xs:documentation>
									<xs:documentation xml:lang="en">
<![CDATA[The PersonTypeDefinition element globally defines the different groups of persons in the calculation EDF file.

Example:
<PersonTypeDefinitions>
    <PersonTypeDefinition Type="A" MinAge="13" MaxAge="255" />
    <PersonTypeDefinition Type="C" MinAge="2" MaxAge="12" />
    <PersonTypeDefinition Type="I" MinAge="0" MaxAge="1" />
</PersonTypeDefinitions> ]]>
									</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:attribute name="Type" type="PersonTypeDefinitionPersonTypeEnum">
										<xs:annotation>
											<xs:documentation xml:lang="de">
Das Type-Attribut legt einen Personentyp fest.

Mögliche Werte:
* A: adult (Erwachsener)
* C: child (Kind)
* I: infant (Baby)

Beispiel: siehe PersonTypeDefinition-Element
											</xs:documentation>
											<xs:documentation xml:lang="en">
The Type attribute specifies a person type.

Possible values:
* A: adult
* C: child
* I: infant

Example: see PersonTypeDefinition element
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="MinAge">
										<xs:annotation>
											<xs:documentation xml:lang="de">
Das MinAge-Attribut legt für diesen Personentyp das Mindestalter in Jahren fest.

Beispiel: siehe PersonTypeDefinition-Element
											</xs:documentation>
											<xs:documentation xml:lang="en">
The MinAge attribute specifies for this person type the minimum age in years.

Example: see PersonTypeDefinition element
											</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:int">
												<xs:minInclusive value="0"/>
												<xs:maxInclusive value="255"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="MaxAge">
										<xs:annotation>
											<xs:documentation xml:lang="de">
Das MaxAge-Attribut legt für diesen Personentyp das Maximalalter in Jahren fest.

Beispiel: siehe PersonTypeDefinition-Element
											</xs:documentation>
											<xs:documentation xml:lang="en">
The MaxAge specifies for this person type the maximum age in years.

Example: see PersonTypeDefinition element
											</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:int">
												<xs:minInclusive value="1"/>
												<xs:maxInclusive value="255"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Rules" minOccurs="1" maxOccurs="1">
					<xs:annotation>
						<xs:documentation xml:lang="de">
Das Rules-Element ist eine Liste von Rule-Elementen.
						</xs:documentation>
						<xs:documentation xml:lang="en">
The Rules element is a list of Rule elements.
						</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence minOccurs="0">
							<xs:element name="Rule" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation xml:lang="de">
Das Rule-Element definiert eine Regel.
									</xs:documentation>
									<xs:documentation xml:lang="en">
The Rule element defines a rule.
									</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Distribution" minOccurs="0">
											<xs:annotation>
												<xs:documentation xml:lang="de">
Das Distribution-Element ist eine Liste von Channel-Elementen.

Falls ein Element kein Distribution-Element hat, gilt dieses Element für alle Vertriebskanäle.
												</xs:documentation>
												<xs:documentation xml:lang="en">
The Distribution element is a list of Channel elements.

If an element has no Distribution element, this element is valid for all distribution channels.
												</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="Channel" minOccurs="0" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation xml:lang="de">
<![CDATA[Das Channel-Element definiert einen Distributionskanal.

Das Channel-Element beschränkt die Kalkulation auf die angegebenen Distributionskanäle.

Beispiel:
<Distribution>
    <Channel Name="C-1"/>
</Distribution> ]]>
															</xs:documentation>
															<xs:documentation xml:lang="en">
<![CDATA[The Channel element defines one distribution channel.

The Channel element restricts the calculation to the specified distribution channels.

Example:
<Distribution>
    <Channel Name="C-1"/>
</Distribution> ]]>
															</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:attribute name="Name" type="xs:string" use="required">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Das Name-Attribut legt den Namen des Distributionskanals fest.
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The Name attribute specifies the name of the distribution channel.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="AirportRestrictions" minOccurs="0" maxOccurs="1">
											<xs:annotation>
												<xs:documentation xml:lang="de"><![CDATA[
Das AirportRestrictions-Element definiert, dass die Regel nur gültig ist für Reisen mit den hier festgelegten Flughäfen.

Beispiel:
<Rule CalculationName="demo">
	<AirportRestrictions>
		<DepartureAirports>
			<DepartureAirport IataCode="DUS"/>
			<DepartureAirport IataCode="CGN"/>
		</DepartureAirports>
		<ArrivalAirports>
			<ArrivalAirport IataCode="PMI"/>
		</ArrivalAirports>
	</AirportRestrictions>
</Rule>
Diese Regel legt fest, dass die Kalkulation mit dem Namen "demo" nur angewandt wird, wenn folgende Bedingungen erfüllt sind:
* Abflug ab DUS oder CGN
* Ankunft in PMI
]]>
												</xs:documentation>
												<xs:documentation xml:lang="en"><![CDATA[
The AirportRestrictions element defines that the rule is only valid if the tour includes the departure airports and destination airports which are stated here.

Example:
<Rule CalculationName="demo">
	<AirportRestrictions>
		<DepartureAirports>
			<DepartureAirport IataCode="DUS"/>
			<DepartureAirport IataCode="CGN"/>
		</DepartureAirports>
		<ArrivalAirports>
			<ArrivalAirport IataCode="PMI"/>
		</ArrivalAirports>
	</AirportRestrictions>
</Rule>
This rule specifies that the calculation named "demo" only is applied if the following conditions are met:
* departure from DUS or CGN
* arrival at PMI
]]>
												</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="DepartureAirports" minOccurs="0" maxOccurs="1">
														<xs:annotation>
															<xs:documentation xml:lang="de">
Das DepartureAirports-Element ist eine Liste von DepartureAirport-Elementen.
															</xs:documentation>
															<xs:documentation xml:lang="en">
The DepartureAirports element is a list of DepartureAirport elements.
															</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:sequence>
																<xs:element name="DepartureAirport" minOccurs="0" maxOccurs="unbounded">
																	<xs:annotation>
																		<xs:documentation xml:lang="de">
Das DepartureAirport-Element definiert einen Flughafen für den Abflug.
																		</xs:documentation>
																		<xs:documentation xml:lang="en">
The DepartureAirport element defines one departure airport.
																		</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:attribute name="IataCode" use="required">
																			<xs:annotation>
																				<xs:documentation xml:lang="de">
Das IataCode-Attribut legt den dreistelligen IATA-Code des Flughafens fest.
																				</xs:documentation>
																				<xs:documentation xml:lang="en">
The IataCode attribute specifies the three-letter IATA code of the departure airport.
																				</xs:documentation>
																			</xs:annotation>
																			<xs:simpleType>
																				<xs:restriction base="xs:string">
																					<xs:pattern value="[A-Z]{3}"/>
																				</xs:restriction>
																			</xs:simpleType>
																		</xs:attribute>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element name="ArrivalAirports" minOccurs="0" maxOccurs="1">
														<xs:annotation>
															<xs:documentation xml:lang="de">
Das ArrivalAirports-Element ist eine Liste von DepartureAirport-Elementen.
															</xs:documentation>
															<xs:documentation xml:lang="en">
The ArrivalAirports element is a list of DepartureAirport elements.
															</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:sequence>
																<xs:element name="ArrivalAirport" minOccurs="0" maxOccurs="unbounded">
																	<xs:annotation>
																		<xs:documentation xml:lang="de">
Das ArrivalAirport-Element definiert einen Flughafen für die Ankunft.
																		</xs:documentation>
																		<xs:documentation xml:lang="en">
The ArrivalAirport element defines one arrival airport.
																		</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:attribute name="IataCode" use="required">
																			<xs:annotation>
																				<xs:documentation xml:lang="de">
Das IataCode-Attribut legt den dreistelligen IATA-Code des Flughafens fest.
																				</xs:documentation>
																				<xs:documentation xml:lang="en">
The IataCode attribute specifies the three-letter IATA code of the arrival airport.
																				</xs:documentation>
																			</xs:annotation>
																			<xs:simpleType>
																				<xs:restriction base="xs:string">
																					<xs:pattern value="[A-Z]{3}"/>
																				</xs:restriction>
																			</xs:simpleType>
																		</xs:attribute>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="DateRestrictions" minOccurs="0" maxOccurs="1">
											<xs:annotation>
												<xs:documentation xml:lang="de">
Das DateRestrictions-Element ist eine Liste von DateRestriction-Elementen.
												</xs:documentation>
												<xs:documentation xml:lang="en">
The DateRestrictions element is a list of DateRestriction elements.
												</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="DateRestriction" minOccurs="0" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation xml:lang="de">
Das DateRestriction-Element legt eine datumsbezogene Bedingung fest.

Für eine Einschränkung auf Buchungs- und Reisezeitraum ist jeweils eine eigene DateRestriction zu schreiben.

Beispiel: Buchungszeitraum zwischen 11.10.2010 bis 15.10.2010 und Reisezeitraum (Anreisen) zwischen 01.02.2011 bis 20.02.2011

DateRestrictions
  DateRestriction  BookingStart="2010-10-11" BookingEnd="2010-10-15"
  DateRestriction  Start="2011-02-01" End="2011-02-20" ApplyTo="Arrival"
/DateRestrictions
															</xs:documentation>
															<xs:documentation xml:lang="en">
The DateRestriction element defines a date-related condition.

Restrictions to the booking and travel periods require a separate DateRestriction.

Example: Booking time range from Oct 11, 2010 until Oct 15, 2010 and travel period (arrival) from Feb 01, 2011 until Feb 20, 2011

DateRestrictions
  DateRestriction  BookingStart="2010-10-11" BookingEnd="2010-10-15"
  DateRestriction  Start="2011-02-01" End="2011-02-20" ApplyTo="Arrival"
/DateRestrictions
															</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:attribute name="ApplyTo" default="Arrival">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Kenner ob zugehörige Angabe Hotel-Anreise- oder Hotel-Aufenthaltsbezogen oder Flug-Anreise- oder Flug-Aufenthaltsbezogen ist. Ob sich der Wert auf die Flug- oder Hotelanreise, bzw. FLug- oder Hotelaufenthalt, etc. bezieht wird über das Attribut "ApplyToMode" gesteuert.

Mögliche Werte:
* Arrival: Der Zeitraum gilt anreisebezogen. Es gelten X Tage als Basis.
* Stay: Der Zeitraum gilt aufenthaltsbezogen. Es gelten X Tage als Basis.
* Within: Der gesamte Reisezeitraum (jeder Aufenthaltstag der Reise) muss im Zeitraum (z.B. zwischen Start und End) liegen. Es gelten X Tage als Basis.
* Departure: Der Zeitraum gilt abreisebezogen. Es gelten X Tage als Basis.
* StayNights: Der Zeitraum gilt aufenthaltsbezogen, jedoch nächteweise.



Beispiel für StayNights:
Es bestehen zwei Frühbucherermäßigungen, die aufenthaltsbezogen gelten, jedoch die Basis „Nächte“ haben.
Frühbucher 1: vom 01.05.10 bis 12.06.10, 	10%
Frühbucher 2: vom 12.06.10, bis 15.08.10, 	5%

Im Falle des Wertes „StayNights“ wird bei zeitraumsüberschneidenden Buchungen der Frühbucher nur einmal berechnet, da die Basis Nächte ist.
Der erste Frühbucher gilt als letztes für die Nacht vom 11.06. auf den 12.06.10.
Der zweite Frühbucher gilt ab der Nacht vom 12.06.10 auf den 13.06.10.

Bei einer Berechnung einer 8-tägigen Reise vom 11.06.10 bis 19.06.10 wird einmal für die erste Nacht der Frühbucher von 10% angewendet. Der Frühbucher von 5% wird siebenmal für alle folgenden Nächte berechnet.


Beispiel für Arrival und ApplyToMode="Flight":
1. Flug CGN – PMI 01.01.10 – 14.01.10
2. Erstes Hotel PMI 01.01.10 – 07.01.10
3. Zweites Hotel PMI 07.01.10 – 14.01.10

Bei dem Anschlusshotel gibt es ein Incentive, das über die Fluganreise gesteuert wird. Das Incentive des zweiten Hotels gilt vom 01.01. bis 06.01.10.
Auch wenn die Anreise im Hotel erst am 07.01.10 erfolgt, wird dennoch das Incentive (Beispiel 7=6) gewährt, da die Bedingung der Fluganreise erfülllt ist.

Beispiel für Stay und ApplyToMode="Flight":
1. Flug DUS – BKK 01.01 – 08.01.
2. Hotelaufenthalt, weil Übernachtsflug 02.01. – 08.01.
Bei dem Hotel gibt es ein Incentive 7=6, dieses würde für HotelStay nicht gezogen werden, da der Hotelaufenthalt nur 6 Tage ist. Wird ApplyTo=FlightStay gesetzt, so bezieht es sich auf die Dauer zwischen Hinflug und Rückflug. Das Incentive 7=6 wird gewährt.

Beispiel für Within und ApplyToMode="Hotel":
1. Flug MUC – TFS 15.01. – 22.01.
2. Hotel TFS 15.01. – 22.01.
Das Incenitive 7=6 hat eine Gültigkeitsdauer vom 01.01. – 31.01. 
Bei ApplyTo=Within muss der Hotelaufenthalt genau in diesen Zeitraum fallen. Gibt es dort eine Überschneidung, so wird das Extra nicht gezogen. z.B. Incenitive 7=6 hat eine Gültigkeitsdauer vom 01.01. – 20.01. Das Incentive wäre in diesem Falle nicht gültig.

																	</xs:documentation>
																	<xs:documentation xml:lang="en">
Identifier of whether the respective information refers to the hotel arrival or hotel stay, or to flight arrival or flight stay. The ApplyToMode attribute controls, if the value refers to the flight or hotel arrival or to the flight or hotel stay, etc.

Possible values:
* Arrival: The time range applies to the arrival.
* Stay: The time range applies to the stay.
* Within: The entire travel period must be within the time range (for example between Start and End).
* Departure: The time range applies to the departure.
* StayNights: The time range applies on a per night basis.
																	</xs:documentation>
																</xs:annotation>
																<xs:simpleType>
																	<xs:restriction base="ApplyToEnum">
																		<xs:enumeration value="Arrival" />
																		<xs:enumeration value="Departure" />
																		<xs:enumeration value="Stay" />
																		<xs:enumeration value="StayNights" />
																		<xs:enumeration value="Within" />
																	</xs:restriction>
																</xs:simpleType>
															</xs:attribute>
															<xs:attribute name="ApplyToMode" type="ApplyToModeEnum">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Das ApplyToMode-Attribut legt fest, ob sich die Angaben im ApplyTo-Attribut auf den Flug oder das Hotel beziehen.

Mögliche Werte:
* Hotel
* Flight

Der Defaultwert - sofern das Attribut nicht gesetzt ist - ist "Flight".
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The ApplyToMode attribute specifies whether the data in the ApplyTo attribute is flight or hotel related.

Possible values:
* Hotel
* Flight

If no attribute is set, the default value is Flight.</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="BookingStart" type="xs:date" use="optional">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Das BookingStart-Attribut legt das Datum fest, nach dem die Reise gebucht sein muss, damit die Bedingung erfüllt ist.

Beispiel:

DateRestrictions
  DateRestriction  BookingStart="2010-10-11" BookingEnd="2010-10-15"
/DateRestrictions

Die Bedingung ist nur erfüllt bei einer Buchung zwischen 11.10.2010 und 15.10.2010.
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The BookingStart attribute specifies the date after which the travel must be booked for the condition to be met.

Example:

DateRestrictions
  DateRestriction  BookingStart="2010-10-11" BookingEnd="2010-10-15"
/DateRestrictions

The condition is only met with a booking between Oct 11, 2010 and Oct 15, 2010.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="BookingEnd" type="xs:date" use="optional">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Das BookingEnd-Attribut legt das Datum fest, vor dem die Reise gebucht sein muss, damit die Bedingung erfüllt ist.

Beispiel: siehe BookingStart.
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The BookingEnd attribute specifies the date before which the travel must be booked for the condition to be met.

Example: see BookingStart.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="MinBookingOffset" type="xs:duration">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Das MinBookingOffset-Attribut legt fest, wie viele Tage minimal zwischen Buchung und Anreise liegen müssen.

Beispiel:
MinBookingOffset="P60D"
Die Buchung muss mindestens 60 Tage vor der Anreise liegen.
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The MinBookingOffset attribute specifies the minimum number of days prior to the arrival.

Example:
MinBookingOffset="P60D"
The booking must be at least 60 days before arrival.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="MaxBookingOffset" type="xs:duration">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Das MaxBookingOffset-Attribut legt fest, wie viele Tage maximal zwischen Buchung und Anreise liegen dürfen.

Beispiel:
MaxBookingOffset="90"
Die Buchung darf maximal 90 Tage vor der Anreise liegen.
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The MaxBookingOffset attribute specifies the maximum number of days prior to the arrival.

Example:
MaxBookingOffset="90"
The booking may be at most 90 days before arrival.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="Start" type="xs:date">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Das Start-Attribut legt ein Anfangsdatum fest. Das ApplyTo-Attribut legt fest, wie dieses Anfangsdatum mit den Reisedaten verglichen wird.

Beispiel:

DateRestrictions
  DateRestriction  Start="2011-02-01" End="2011-02-20" ApplyTo="Arrival"
/DateRestrictions

Die Anreise muss zwischen 01.02.2011 und 20.02.2011 sein.
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The Start attribute specifies a start date. The ApplyTo attribute specifies how this start date is compared to the travel dates.

Example:

DateRestrictions
  DateRestriction  Start="2011-02-01" End="2011-02-20" ApplyTo="Arrival"
/DateRestrictions

The arrival must be between Feb 01, 2011 and Feb 20, 2011
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="End" type="xs:date">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Das End-Attribut legt ein Enddatum fest. Das ApplyTo-Attribut legt fest, wie dieses Enddatum mit den Reisedaten verglichen wird.

Beispiel: siehe Start-Attribut.
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The End attribute specifies an end date. The ApplyTo attribute specifies how this end date is compared to the travel dates.

Example: see Start attribute.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
												<xs:attribute name="Operator" type="OperatorEnum" default="OR">
													<xs:annotation>
														<xs:documentation xml:lang="de">
<![CDATA[
Das Operator-Attribut legt fest, wie die DateRestriction-Elemente in diesem DateRestrictions-Element logisch verknüpft werden.

Mögliche Werte:
* AND: Die DateRestriction-Elemente sind mit einem logischen UND verknüpft. Alle Bedingungen müssen zutreffen.
* OR: Die DateRestriction-Elemente sind mit einem logischen ODER verknüpft. Mindestens eine Bedingung muss zutreffen.

Beispiel:
<DateRestrictions>
	<DateRestriction Start="2018-04-01" End="2018-04-30" ApplyTo="Arrival"/>
	<DateRestriction Start="2018-08-01" End="2018-08-31" ApplyTo="Arrival"/>
</DateRestrictions>
Die Bedingung des DateRestrictions-Elementes ist erfüllt, wenn man im April oder im August anreist.

Beispiel:
<DateRestrictions Operator="AND">
	<DateRestriction BookingStart="2018-04-01" BookingEnd="2018-04-30"/>
	<DateRestriction Start="2018-08-01" End="2018-08-31" ApplyTo="Arrival"/>
</DateRestrictions>
Die Bedingung des DateRestrictions-Elementes ist erfüllt, wenn man im April bucht und im August anreist.
]]>
														</xs:documentation>
														<xs:documentation xml:lang="en">
<![CDATA[
The Operator attribute specifies how the DateRestriction elements in this DateRestrictions element logically are joined.

Possible values:
* AND: The DateRestriction elements are joined by a logical AND. All conditions must be met.
* OR: The DateRestriction elements are joined by a logical OR. At least one condition must be met.

Example:
<DateRestrictions>
	<DateRestriction Start="2018-04-01" End="2018-04-30" ApplyTo="Arrival"/>
	<DateRestriction Start="2018-08-01" End="2018-08-31" ApplyTo="Arrival"/>
</DateRestrictions>
The condition of the DateRestrictions element is met if the arrival is in April or in August.

Example:
<DateRestrictions Operator="AND">
	<DateRestriction BookingStart="2018-04-01" BookingEnd="2018-04-30"/>
	<DateRestriction Start="2018-08-01" End="2018-08-31" ApplyTo="Arrival"/>
</DateRestrictions>
The condition of the DateRestrictions element is met if the booking is in April and the arrival is in August.
]]>
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
										<xs:element name="WeekdayRestrictions" minOccurs="0" maxOccurs="1">
											<xs:annotation>
												<xs:documentation xml:lang="de">
Das WeekdayRestrictions-Element ist eine Liste von WeekdayRestriction-Elementen.
												</xs:documentation>
												<xs:documentation xml:lang="en">
The WeekdayRestrictions element is a list of WeekdayRestriction elements.
												</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="WeekdayRestriction" minOccurs="0" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation xml:lang="de">
Das WeekdayRestriction-Element definiert eine Bedingung, die sich auf Wochentage bezieht.
Beispiel: Anreise oder Buchung müssen auf bestimmte Tage fallen.

Für eine Einschränkung auf Anreise- und Buchungstag ist jeweils eine eigene WeekdayRestriction zu schreiben.

Beispiel: Anreisetag Montag und Donnerstag und Buchungstag(Anreisen) Samstag und Sonntag

WeekdayRestrictions
  WeekdayRestriction ApplyTo="Arrival" Mask="YNNYNNN"
  WeekdayRestriction ApplyTo="Booking" Mask="NNNNNYY"
/WeekdayRestrictions
															</xs:documentation>
															<xs:documentation xml:lang="en">
The WeekdayRestriction element defines a condition with respect to days of the week.
Example: Arrival or booking must be on certain days.

Restrictions to the arrival and booking days require a separate WeekdayRestriction.

Example: Arrival day Monday and Thursday, booking day (arrival) Saturday and Sunday

WeekdayRestrictions
  WeekdayRestriction ApplyTo="Arrival" Mask="YNNYNNN"
  WeekdayRestriction ApplyTo="Booking" Mask="NNNNNYY"
/WeekdayRestrictions
															</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:attribute name="ApplyTo" type="ApplyToWeekdayEnum">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Das ApplyTo-Attribut legt fest, ob sich die Wochentage im Mask-Attribut auf die Fluganreise oder auf die Buchung beziehen.

Mögliche Werte:
* Arrival: Die Wochentage beziehen sich auf die Fluganreise.
* Booking: Die Wochentage beziehen sich auf die Buchung.
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The ApplyTo attribute specifies whether the weekdays in the Mask attribute are related to the flight arrival or to the booking.

Possible values:
* Arrival: The weekdays are related to the flight arrival.
* Booking: The weekdays are related to the booking.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="Mask" use="required">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Das Mask-Attribut legt die Wochentage fest, an denen Anreise oder Buchung erlaubt sind.

Der Wert des Mask-Attributes ist eine Zeichenkette der Länge 7.
Jedes Zeichen steht für einen Wochentag. Das erste Zeichen steht für den Montag, das zweite für den Dienstag usw.
Für jeden Wochentag kann man entweder Y (Yes) oder N (No) angeben.

Beispiel: Anreisetag Montag und Donnerstag und Buchungstag Samstag und Sonntag

WeekdayRestrictions
	WeekdayRestriction ApplyTo="Arrival" Mask="YNNYNNN"
	WeekdayRestriction ApplyTo="Booking" Mask="NNNNNYY"
/WeekdayRestrictions
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The Mask attribute specifies the weekdays on which arrival or booking are allowed.

The value of the Mask attribute is a string of 7 characters.
Each character represents one weekday. The first character represents Monday, the second one Tuesday etc.
For each weekday, one can specify either Y (Yes) or N (No).

Example: Arrival day Monday and Thursday, booking day Saturday and Sunday

WeekdayRestrictions
	WeekdayRestriction ApplyTo="Arrival" Mask="YNNYNNN"
	WeekdayRestriction ApplyTo="Booking" Mask="NNNNNYY"
/WeekdayRestrictions
																	</xs:documentation>
																</xs:annotation>
																<xs:simpleType>
																	<xs:restriction base="xs:string">
																		<xs:pattern value="[YN]{7}"/>
																	</xs:restriction>
																</xs:simpleType>
															</xs:attribute>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="BoardRestrictions" minOccurs="0" maxOccurs="1">
											<xs:annotation>
												<xs:documentation xml:lang="de">
Das BoardRestrictions-Element ist eine Liste von BoardRestriction-Elementen.
												</xs:documentation>
												<xs:documentation xml:lang="en">
The BoardRestrictions element is a list of BoardRestriction elements.
												</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="BoardRestriction" minOccurs="0" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation xml:lang="de">
Das BoardRestriction-Element definiert eine verpflegungsbezogene Bedingung.
															</xs:documentation>
															<xs:documentation xml:lang="en">
The BoardRestriction element defines a board-related condition.
															</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:attribute name="Code" type="xs:string" use="optional">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Das Code-Attribut legt den veranstalterinternen Verpflegungscode fest.
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The Code attribute specifies the tour operator-internal board code.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="StayRestrictions" minOccurs="0" maxOccurs="1">
											<xs:annotation>
												<xs:documentation xml:lang="de">
Das Element StayRestrictions definiert eine Einschränkung bezogen auf eine Aufenhaltsdauer. 
Dieses Element korrespondiert mit dem Feld "Reisedauer" aus der Veranstalter-Kalkulation / Regeln.

Sofern in dem Veranstaltersystem mehrere Aufenthaltsdauern gesteuert werden, ist für jede Aufenthaltsdauer bzw. Aufenthaltsrange (von 1 - 10 Tagen, von 11 - 15 Tagen, etc.) eine StayRestriction zu schreiben.
												</xs:documentation>
												<xs:documentation xml:lang="en">
The StayRestrictions element defines a restriction with respect to a stay duration. 
This element corresponds to the "Travel duration" field in the tour operator's calculation and rules.

If multiple stay durations exist in the tour operator system, a StayRestriction must be set for each stay duration or stay range (1-10 days, 11-15 days etc.).</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="StayRestriction" minOccurs="0" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation xml:lang="de">
In dem Unterelement StayRestriction können die Einschränkungen bezogen auf die Reisedauern gesteuert werden.

Für den Export aus dem Veranstalter-Kalkulationssystem kann entweder eine Aufenthaltsdauer (7 Tage) oder eine Aufenthaltsrange (von 1 - 10 Tagen) oder mehrere Aufenthaltsdauern oder Ranges definiert werden.
Für jede unterschiedliche Dauer bzw. Range ist eine eigene StayRestriction zu schreiben.

Beispiel: Aufenthaltsdauer 1-10 Tage oder 20-30 Tage oder genau 25 Tage

StayRestrictions
  StayRestriction Min="P1D" Max="P10D" Mode="Flight"
  StayRestriction Min="P20D" Max="P30D" Mode="Flight"
  StayRestriction Min="P25D" Max="P25D" Mode="Flight"
/StayRestrictions
															</xs:documentation>
															<xs:documentation xml:lang="en">
The StayRestriction subelement is used to control the restrictions with respect to the travel durations.

A stay duration (7 days), a stay range (1-10 days) or multiple stay durations/ranges can be set for exporting from the tour operator's accounting system.
A separate StayRestriction must be set for each different duration or range.

Example: Stay duration 1-10 days, 20-30 days or exactly 25 days

StayRestrictions
  StayRestriction Min="P1D" Max="P10D" Mode="Flight"
  StayRestriction Min="P20D" Max="P30D" Mode="Flight"
  StayRestriction Min="P25D" Max="P25D" Mode="Flight"
/StayRestrictions</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:attribute name="Min" type="xs:duration" use="optional">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Das Attribut "Min" steuert die Mindestaufenthaltstage. Es korrespondiert mit dem Feld "Reisedauer" der Veranstalter-Kalkulation / Regeln.

Beispiel: Aufenthaltsdauer 1-10 Tage oder 20-30 Tage oder genau 25 Tage

StayRestrictions
  StayRestriction Min="P1D" Max="P10D" Mode="Flight"
  StayRestriction Min="P20D" Max="P30D" Mode="Flight"
  StayRestriction Min="P25D" Max="P25D" Mode="Flight"
/StayRestrictions

Angabe einer Mindestaufenthaltsdauer in Tagen, Wochen oder Monaten.
Beispiel
Min=P3D: Es gilt eine Mindestaufenthaltsdauer von 3 Tagen.
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The Min attribute controls the minimum stay duration in days. It corresponds to the "Travel duration" field in the tour operator's calculation and rules.

Example: Stay duration 1-10 days, 20-30 days or exactly 25 days

StayRestrictions
  StayRestriction Min="P1D" Max="P10D" Mode="Flight"
  StayRestriction Min="P20D" Max="P30D" Mode="Flight"
  StayRestriction Min="P25D" Max="P25D" Mode="Flight"
/StayRestrictions

Indicates a minimum stay duration in days, weeks or months.
Example
Min=P3D: The minimum stay duration is 3 days.</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="Max" type="xs:duration" use="optional">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Das Attribut "Max" steuert die Maximale Aufenthaltsdauer. Es korrespondiert mit dem Feld "Reisedauer" der Veranstalter-Kalkulation / Regeln.

Beispiel: Aufenthaltsdauer 1-10 Tage oder 20-30 Tage oder genau 25 Tage

StayRestrictions
  StayRestriction Min="P1D" Max="P10D" Mode="Flight"
  StayRestriction Min="P20D" Max="P30D" Mode="Flight"
  StayRestriction Min="P25D" Max="P25D" Mode="Flight"
/StayRestrictions

Angabe einer  Maximalaufenthaltsdauer in Tagen, Wochen oder Monaten.
Beispiel
Max=P21D: Es gilt eine Maximalaufenthaltsdauer von 21 Tagen.
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The Max attribute controls the maximum stay duration. It corresponds to the "Travel duration" field in the tour operator's calculation and rules.

Example: Stay duration 1-10 days, 20-30 days or exactly 25 days

StayRestrictions
  StayRestriction Min="P1D" Max="P10D" Mode="Flight"
  StayRestriction Min="P20D" Max="P30D" Mode="Flight"
  StayRestriction Min="P25D" Max="P25D" Mode="Flight"
/StayRestrictions

Indicates a maximum stay duration in days, weeks or months.
Example
Max=P21D: The maximum stay duration is 21 days.</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="Mode" type="StayModeEnum">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Das Attribute "Mode" beschreibt die Reisedauereinschränkung auf die Hotelaufenthaltsdauer oder die Flugaufenthaltsdauer.
Mögliche Werte:
* Hotel
* Flight
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The Mode attribute describes the restriction of the travel duration pertaining to the hotel stay duration or the flight stay duration.
Possible values:
* Hotel
* Flight
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="HotelRestrictions" minOccurs="0" maxOccurs="1">
											<xs:annotation>
												<xs:documentation xml:lang="de">
Das Element HotelRestrictions definiert eine Einschränkung bezogen auf bestimmte Hotelcodes, Hotelkategorien und Hotelpreise.
Dieses Element korrespondiert mit den Feldern "Hotelcodes" und Kategorie aus der Veranstalter-Kalkulation / Regeln.
												</xs:documentation>
												<xs:documentation xml:lang="en">
The HotelRestrictions element defines a restriction with respect to specific hotel codes, categories and prices.
This element corresponds to the "Hotel codes" and "Category" fields in the tour operator's calculation and rules.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="HotelRestriction" minOccurs="0" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation xml:lang="de">
Das Element HotelRestrictions definiert eine Einschränkung bezogen auf bestimmte Hotelcodes, Hotelkategorien und Hotelpreise.
Dieses Element korrespondiert mit den Feldern "Hotelcodes" und Kategorie aus der Veranstalter-Kalkulation / Regeln.

Auf dieser Ebene können die Attribute "MinPrice" und "MaxPrice" genutzt werden, um die im Veranstalter-Kalkulationssystem definierten von/bis Preise des Hotelanteils im EK zu definieren.
															</xs:documentation>
															<xs:documentation xml:lang="en">
The HotelRestrictions element defines a restriction with respect to specific hotel codes, categories and prices.
This element corresponds to the "Hotel codes" and "Category" fields in the tour operator's calculation and rules.

At this level, the MinPrice and MaxPrice attributes can be used to set the minimum/maximum purchase prices of the hotel portion that are defined in the tour operator's accounting system.</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:sequence>
																<xs:element name="Locations" minOccurs="0" maxOccurs="1">
																	<xs:complexType>
																		<xs:sequence>
																			<xs:element name="Location" type="LocationType" minOccurs="0" maxOccurs="unbounded">
																				<xs:annotation>
																					<xs:documentation xml:lang="de">Das Element Location dient dazu, die  Regionszuordnung des Hotels bzw. des Produktes zu definieren.
Mittels dieser Informationen können Vertriebssysteme dynamische Regionszuordnungen vornehmen. Beispielsweise ist so eine Suche nach allen Produkten an der "Costa del Sol" etc. möglich.
																					</xs:documentation>
																					<xs:documentation xml:lang="en">
The Location element is used to define the geographical allocation of the hotel or product.
Using this information sales systems will be able to dynamically assign regions. For example, all products at the "Costa del Sol" could be searched for.</xs:documentation>
																				</xs:annotation>
																			</xs:element>
																		</xs:sequence>
																	</xs:complexType>
																</xs:element>
																<xs:element name="Categories" minOccurs="0" maxOccurs="1">
																	<xs:annotation>
																		<xs:documentation xml:lang="de">
Das Element "Categories" korrespondiert mit den Feldern "Hotelkategorie" der Veranstalter-Kalkulation.
Hier wird die Regel auf bestimmte Hotelkategorien restriktiert: Die Regel darf nur angewendet werden, sofern die Sternekategorie des Hotels der hier transportierten Kategorie entspricht.
																		</xs:documentation>
																		<xs:documentation xml:lang="en">
The Categories element corresponds to the "Hotel category" fields in the tour operator's calculation.
Here, the rule is restricted to specific hotel categories: The rule may only be applied, if the hotel's star category equals the given category.</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:sequence>
																			<xs:element name="Category" minOccurs="0" maxOccurs="unbounded">
																				<xs:annotation>
																					<xs:documentation xml:lang="de">
Das Element "Categories" korrespondiert mit den Feldern "Hotelkategorie" der Veranstalter-Kalkulation.
Hier wird die Regel auf bestimmte Hotelkategorien restriktiert: Die Regel darf nur angewendet werden, sofern die Sternekategorie des Hotels der hier transportierten Kategorie entspricht.

Es können sowohl genaue Kategorien angegeben werden (Beispiel 3 Sterne) als auch eine Kategoriespanne (von 1 - 3 Sternen).
Je exakter Kategorie oder Range wird eine "Category" geschrieben. Daher kann das Element "Category" mehrfach auftreten.

Beispiel: Regel ist gültig für Hotels mit 5 Sternen und für Hotels von 2 - 3 Sternen

Categories
  Category  Min="5" Max="5"
  Category Min="2" Max="3"
/Categories
																					</xs:documentation>
																					<xs:documentation xml:lang="en">
The Categories element corresponds to the "Hotel category" fields in the tour operator's calculation.
Here, the rule is restricted to specific hotel categories: The rule may only be applied, if the hotel's star category equals the given category.

The category can be defined explicitly (e. g. 3 stars) or as a range (1 to 3 stars).
The category or range should be set as precisely as possible to limit Category to a specific range. Hence, the Category element can occur more than once.

Example: The rule applies to hotels with 5 stars as well as to hotels with 2-3 stars

Categories
  Category  Min="5" Max="5"
  Category Min="2" Max="3"
/Categories</xs:documentation>
																				</xs:annotation>
																				<xs:complexType>
																					<xs:attribute name="Min" type="xs:decimal">
																						<xs:annotation>
																							<xs:documentation xml:lang="de">
Attribut "Min" korrespondiert mit den Feldern "Hotelkategorie" der Veranstalter-Kalkulation.

Es können sowohl genaue Kategorien angegeben werden (Beispiel 3 Sterne) als auch eine Kategoriespanne (von 1 - 3 Sternen).
Je exakter Kategorie oder Range wird eine "Category" geschrieben. Daher kann das Element "Category" mehrfach auftreten.

Beispiel: Regel ist gültig für Hotels mit 5 Sternen und für Hotels von 2 - 3 Sternen

Categories
  Category  Min="5" Max="5"
  Category Min="2" Max="3"
/Categories
																							</xs:documentation>
																							<xs:documentation xml:lang="en">
The Min attribute corresponds to the "Hotel category" fields in the tour operator's calculation.

The category can be defined explicitly (e. g. 3 stars) or as a range (1 to 3 stars).
The category or range should be set as precisely as possible to limit Category to a specific range. Hence, the Category element can occur more than once.

Example: The rule applies to hotels with 5 stars as well as to hotels with 2-3 stars

Categories
  Category  Min="5" Max="5"
  Category Min="2" Max="3"
/Categories</xs:documentation>
																						</xs:annotation>
																					</xs:attribute>
																					<xs:attribute name="Max" type="xs:decimal">
																						<xs:annotation>
																							<xs:documentation xml:lang="de">
Attribut "Max" korrespondiert mit den Feldern "Hotelkategorie" der Veranstalter-Kalkulation.

Es können sowohl genaue Kategorien angegeben werden (Beispiel 3 Sterne) als auch eine Kategoriespanne (von 1 - 3 Sternen).
Je exakter Kategorie oder Range wird eine "Category" geschrieben. Daher kann das Element "Category" mehrfach auftreten.

Beispiel: Regel ist gültig für Hotels mit 5 Sternen und für Hotels von 2 - 3 Sternen

Categories
  Category  Min="5" Max="5"
  Category Min="2" Max="3"
/Categories
																							</xs:documentation>
																							<xs:documentation xml:lang="en">
The Max attribute corresponds to the "Hotel category" fields in the tour operator's calculation.

The category can be defined explicitly (e. g. 3 stars) or as a range (1 to 3 stars).
The category or range should be set as precisely as possible to limit Category to a specific range. Hence, the Category element can occur more than once.

Example: The rule applies to hotels with 5 stars as well as to hotels with 2-3 stars

Categories
  Category  Min="5" Max="5"
  Category Min="2" Max="3"
/Categories</xs:documentation>
																						</xs:annotation>
																					</xs:attribute>
																				</xs:complexType>
																			</xs:element>
																		</xs:sequence>
																	</xs:complexType>
																</xs:element>
																<xs:element name="Hotels" minOccurs="0" maxOccurs="1">
																	<xs:annotation>
																		<xs:documentation xml:lang="de">Das Hotels-Element ist eine Liste von Hotel-Elementen.

Wenn ein Hotels-Element mehrere Hotel-Elemente hat, sind die Hotel-Elemente mit einem logischen ODER verknüpft.
																		</xs:documentation>
																		<xs:documentation xml:lang="en">The Hotels element is a list of Hotel elements.

If a Hotels element has more than one Hotel elements, these Hotel elements are joined with a logical OR.
																		</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:sequence>
																			<xs:element name="Hotel" minOccurs="0" maxOccurs="unbounded">
																				<xs:complexType>
																					<xs:attribute name="Code" type="xs:string" />
																					<xs:attribute name="RoomCode" type="xs:string">
																						<xs:annotation>
																							<xs:documentation xml:lang="de">Einschränkung auf einen bestimmten Zimmertyp, sofern ein Anschlusshotel mit einem bestimmten Zimmer gebucht werden muss.

Hier ist der veranstalterinterne Zimmercode anzugeben, der in dem Datentyp SellingData/Rooms/Room/Code angegeben ist.
																							</xs:documentation>
																							<xs:documentation xml:lang="en">
The restriction to a specific room type, if a connecting hotel must be booked in connection with a specific room.

Indicates the tour operator’s internal room code, specified in the SellingData/Rooms/Room/Code data type.</xs:documentation>
																						</xs:annotation>
																					</xs:attribute>
																				</xs:complexType>
																			</xs:element>
																		</xs:sequence>
																	</xs:complexType>
																</xs:element>
																<xs:element ref="Sources" minOccurs="0" maxOccurs="1">
																	<xs:annotation>
																		<xs:documentation xml:lang="de">
Das Element Sources definiert die Quelle eines Fluges oder Hotels. 

Das Element ist optional. Es steuert, für welche Flug- und Hotelquellen eine Kalkulation gültig ist.

Mögliche Flugquellen sind zum Beispiel:

- Published
- Pooling

Mögliche Hotelquellen sind zum Beispiel:

- Hotelbeds


Gibt es keine Einschränkungen, d.h. die Regel gilt für alle Flug- und Hotelquellen, dann ist das Element "Sources" nicht zu schreiben. 

Wenn die Regel lediglich für eine oder zwei Flug- oder Hotelquellen gültig ist, dann sind diese explizit über das Attribut "Source" zu nennen. 


Beispiel: Die Regel ist nur gültig für Pooling Flüge

FlightRestrictions

  FlightRestriction

	Sources

	  Source ID=Pooling

   /Sources

 /FlightRestriction 

/FlightRestrictions

Hotelquellen werden unter HotelRestrictions angegeben.
																		</xs:documentation>
																		<xs:documentation xml:lang="en">
The Sources element defines the source of a flight or a hotel. 

The element is optional. It defines which flight and hotel sources a calculation applies to.

Possible flight sources:

- Published
- Pooling

Possible hotel sources:

- Hotelbeds


If there are no restrictions, i. e. the rule applies to all flight and hotel sources, the Sources element must not be defined. 

If the rule only applies to one or two flight or hotel sources, those sources must be explicitly specified via the Source attribute. 


Example: The rule is only valid for pooling flights

FlightRestrictions

  FlightRestriction

	Sources

	  Source ID=Pooling

   /Sources

 /FlightRestriction 

/FlightRestrictions

Hotel sources are specified under HotelRestrictions.</xs:documentation>
																	</xs:annotation>
																</xs:element>
															<xs:element name="RateCodes" minOccurs="0" maxOccurs="1">
																	<xs:complexType>
																		<xs:sequence>
																			<xs:element name="RateCode" minOccurs="1" maxOccurs="unbounded">
																				<xs:annotation>
																					<xs:documentation xml:lang="de">Ein RateCode dient zur Kalkulation einer Rate im Hotelvertrag. Dafür wird im Hotel-EDF auf Zimmerebene das Attribut RateCode (in der Peakwork Box sog. "SupplierRateCode") festgelegt.
																						Die Anwendung erfolgt im PXB2Tool (beim PXB-Merge) und im Calc-Plugin.

																						Mehrere CustomCode-Attribute sind ODER-verknüpft.
																					</xs:documentation>
																					<xs:documentation xml:lang="en">The RateCode is used for the calculation of a hotel contract rate. Therefore, in the Hotel EDF for the element Room, you need to determine the attribute RateCode (in the Peakwork Box: "SupplierRateCode").
																						It is applied in the PXB2Tool (during the PXB merge) and in the Calc plugin.

																						Multiple CustomCode attributes are disjunctive.
																					</xs:documentation>
																				</xs:annotation>
																				<xs:complexType>
																						<xs:attribute name="CustomCode" type="xs:string">
																							<xs:annotation>
																								<xs:documentation xml:lang="de"><![CDATA[Die Kalkulation kann auf einen CustomCode eingeschränkt werden (in der Box sog. "CustomRateCode").
																							
				Beispiel mit zwei verschiedenen Regeln:
																							
				<!-- Diese Regel wird auf alle Angebote mit Hotel Code "ATI05" und einem der beiden Custom Codes angewendet -->

						<Rule Name="TZOO KW29 CTA61B 622" SortIndex="1" CalculationName="TestAnd">
							<HotelRestrictions Operator="AND">
								<HotelRestriction>
										<RateCodes>
												<RateCode CustomCode="BAR"/>
												<RateCode CustomCode="OPAC"/>
										</RateCodes>
								</HotelRestriction>
								<HotelRestriction>
										<Hotels>
												<Hotel Code="ATI05"/>
										</Hotels>
								</HotelRestriction>
							</HotelRestrictions>
						</Rule>

				<!-- Diese Regel wird auf alle Angebote mit Custom Code "KAP1" angewendet -->

						<Rule Name="TZOO KW29 CTA61B 622" SortIndex="1" CalculationName="TestOr">
							<HotelRestrictions Operator="OR">
								<HotelRestriction>
										<RateCodes>
												<RateCode CustomCode="KAP1"/>
										</RateCodes>
								</HotelRestriction>
							</HotelRestrictions>
						</Rule>
					</Rules>]]>

																								</xs:documentation>
																								<xs:documentation xml:lang="en"><![CDATA[The calculation can be restricted to a CustomCode (in the Box: "SupplierRateCode").
																			
Example of two different rules:

<!-- This rule applies to all offers with the Hotel Code "ATI05" including one of the following CustomCodes-->																	
        
		<Rule Name="TZOO KW29 CTA61B 622" SortIndex="1" CalculationName="TestAnd">
            <HotelRestrictions Operator="AND">
                <HotelRestriction>
                        <RateCodes>
                                <RateCode CustomCode="BAR"/>
                                <RateCode CustomCode="OPAC"/>
                        </RateCodes>
                </HotelRestriction>
                <HotelRestriction>
                        <Hotels>
                                <Hotel Code="ATI05"/>
                        </Hotels>
                </HotelRestriction>
            </HotelRestrictions>
        </Rule>

<!-- This rule applies to all offers including the CustomCode "KAP1" -->

        <Rule Name="TZOO KW29 CTA61B 622" SortIndex="1" CalculationName="TestOr">
            <HotelRestrictions Operator="OR">
                <HotelRestriction>
                        <RateCodes>
                                <RateCode CustomCode="KAP1"/>
                        </RateCodes>
                </HotelRestriction>
            </HotelRestrictions>
        </Rule>
    </Rules>]]>
																								</xs:documentation>
																							</xs:annotation>
																						</xs:attribute>
																				</xs:complexType>
																			</xs:element>
																		</xs:sequence>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
															<xs:attribute name="MinPrice" type="xs:decimal">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Die Attribute "MinPrice" und "MaxPrice" korrespondieren mit den Feldern "Hotelpreis von" und Hotelpreis bis" aus der Veranstalter-Kalkulation.
Hier ist der Hotelpreis bzw. Hotelanlteil der Buchung gemeint. Diese Felder restriktieren eine Regel wie folgt: Die Regel darf nur angewendet werden, sofern der ermittelte Hotelanteil im Einkauf in dieser Preisspanne liegt.
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The MinPrice and MaxPrice attributes correspond to the "Min. hotel price" and "Max. hotel price" fields from the tour operator's calculation.
This refers to the hotel price or hotel portion of the booking. These fields restrict a rule as follows: The rule may only be applied, if the resulting hotel portion falls into the purchase price range.</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="MaxPrice" type="xs:decimal">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Die Attribute "MinPrice" und "MaxPrice" korrespondieren mit den Feldern "Hotelpreis von" und Hotelpreis bis" aus der Veranstalter-Kalkulation.
Hier ist der Hotelpreis bzw. Hotelanlteil der Buchung gemeint. Diese Felder restriktieren eine Regel wie folgt: Die Regel darf nur angewendet werden, sofern der ermittelte Hotelanteil im Einkauf in dieser Preisspanne liegt.
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The MinPrice and MaxPrice attributes correspond to the "Min. hotel price" and "Max. hotel price" fields from the tour operator's calculation.
This refers to the hotel price or hotel portion of the booking. These fields restrict a rule as follows: The rule may only be applied, if the resulting hotel portion falls into the purchase price range.</xs:documentation>
																</xs:annotation>
															</xs:attribute>
														</xs:complexType>
												</xs:element>		
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="GuestRestrictions" minOccurs="0" maxOccurs="1">
											<xs:annotation>
												<xs:documentation xml:lang="de">
Das Element GuestRestrictions definiert eine Einschränkung bezogen auf Personengruppen und damit die Anzahl von Erwachsenen, Kindern und Infants.
Eine Restriktion in einer Personengruppe bezieht sich stets auf die Buchung. Beispiel: Die Regel findet nur Anwendung, wenn in der Buchung 2 Erwachsene und 2 Kinder sind.
Dieses Element korrespondiert mit Feldern wie "Anz. Erwachsene", "Anz. Kinder" und "Anz. Babies" aus der Veranstalter-Kalkulation / Regeln.

Sofern in dem Veranstaltersystem mehrere Personengruppen in einer Regel restriktiert werden, ist für jede Personengruppe eine GuestRestriction zu schreiben.
												</xs:documentation>
												<xs:documentation xml:lang="en">
The GuestRestrictions element defines a restriction with respect to guest groups, i. e. the number of adults, children and infants.
A restriction on a guest group always refers to the booking. Example: The rule will only be applied, if the booking comprises 2 adults and 2 children.
This element corresponds to the "No. of adults", "No. of children" and "No. of infants" fields in the tour operator's calculation and rules.

If multiple guest groups in the tour operator system are restricted by a rule, a GuestRestriction must be set for each group.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="GuestRestriction" minOccurs="0" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation xml:lang="de">
Das Element GuestRestrictions definiert eine Einschränkung bezogen auf Personengruppen und damit die Anzahl von Erwachsenen, Kindern und Infants.
Eine Restriktion in einer Personengruppe bezieht sich stets auf die Buchung. Beispiel: Die Regel findet nur Anwendung, wenn in der Buchung 2 Erwachsene und 2 Kinder sind.
Dieses Element korrespondiert mit dem Feldern "Anz. Erwachsene", "Anz. Kinder" und "Anz. Babies" aus der Veranstalter-Kalkulation / Regeln.

Sofern in dem Veranstaltersystem mehrere Personengruppen in einer Regel restriktiert werden, ist für jede Personengruppe eine GuestRestriction zu schreiben.

Beispiel: Die Regel ist nur gültig, wenn in der Buchung 2 Erwachsene, 1 Kind und 1 Infant sind

GuestRestrictions
   GuestRestriction MinPerson="2" MaxPerson="2" PersonType="A"
   GuestRestriction MinPerson="1" MaxPerson="1" PersonType="C"
   GuestRestriction MinPerson="1" MaxPerson="1" PersonType="I"
/GuestRestrictions
															</xs:documentation>
															<xs:documentation xml:lang="en">
The GuestRestrictions element defines a restriction with respect to guest groups, i. e. the number of adults, children and infants.
A restriction on a guest group always refers to the booking. Example: The rule will only be applied, if the booking comprises 2 adults and 2 children.
This element corresponds to the "No. of adults", "No. of children" and "No. of infants" fields in the tour operator's calculation and rules.

If multiple guest groups in the tour operator system are restricted by a rule, a GuestRestriction must be set for each group.

Example: The rule is only valid, if the booking comprises 2 adults, 1 child and 1 infant.

GuestRestrictions
   GuestRestriction MinPerson="2" MaxPerson="2" PersonType="A"
   GuestRestriction MinPerson="1" MaxPerson="1" PersonType="C"
   GuestRestriction MinPerson="1" MaxPerson="1" PersonType="I"
/GuestRestrictions</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:attribute name="MinPerson" type="xs:unsignedShort">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Das Element GuestRestrictions definiert eine Einschränkung bezogen auf Personengruppen und damit die Anzahl von Erwachsenen, Kindern und Infants.
Eine Restriktion in einer Personengruppe bezieht sich stets auf die Buchung. Beispiel: Die Regel findet nur Anwendung, wenn in der Buchung 2 Erwachsene und 2 Kinder sind.
Das Attribut "MinPerson" korrespondiert mit dem Feldern "Anz. Erwachsene von", "Anz. Kinder von" und "Anz. Babies von" aus der Veranstalter-Kalkulation / Regeln.

Sofern in dem Veranstaltersystem mehrere Personengruppen in einer Regel restriktiert werden, ist für jede Personengruppe eine GuestRestriction zu schreiben.

Beispiel: Die Regel ist nur gültig, wenn in der Buchung 2 Erwachsene, 1 Kind und 1 Infant sind

GuestRestrictions
   GuestRestriction MinPerson="2" MaxPerson="2" PersonType="A"
   GuestRestriction MinPerson="1" MaxPerson="1" PersonType="C"
   GuestRestriction MinPerson="1" MaxPerson="1" PersonType="I"
/GuestRestrictions
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The GuestRestrictions element defines a restriction with respect to guest groups, i. e. the number of adults, children and infants.
A restriction on a guest group always refers to the booking. Example: The rule will only be applied, if the booking comprises 2 adults and 2 children.
The MinPerson attribute corresponds to the "No. of adults: From", "No. of children: From" and "No. of infants: From" fields in the tour operator's calculation and rules.

If multiple guest groups in the tour operator system are restricted by a rule, a GuestRestriction must be set for each group.

Example: The rule is only valid, if the booking comprises 2 adults, 1 child and 1 infant.

GuestRestrictions
   GuestRestriction MinPerson="2" MaxPerson="2" PersonType="A"
   GuestRestriction MinPerson="1" MaxPerson="1" PersonType="C"
   GuestRestriction MinPerson="1" MaxPerson="1" PersonType="I"
/GuestRestrictions</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="MaxPerson" type="xs:unsignedShort">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Das Element GuestRestrictions definiert eine Einschränkung bezogen auf Personengruppen und damit die Anzahl von Erwachsenen, Kindern und Infants.
Eine Restriktion in einer Personengruppe bezieht sich stets auf die Buchung. Beispiel: Die Regel findet nur Anwendung, wenn in der Buchung 2 Erwachsene und 2 Kinder sind.
Das Attribut "MaxPerson" korrespondiert mit dem Feldern "Anz. Erwachsene bis", "Anz. Kinder von" und "Anz. Babies bis" aus der Veranstalter-Kalkulation / Regeln.

Sofern in dem Veranstaltersystem mehrere Personengruppen in einer Regel restriktiert werden, ist für jede Personengruppe eine GuestRestriction zu schreiben.

Beispiel: Die Regel ist nur gültig, wenn in der Buchung 2 Erwachsene, 1 Kind und 1 Infant sind

GuestRestrictions
   GuestRestriction MinPerson="2" MaxPerson="2" PersonType="A"
   GuestRestriction MinPerson="1" MaxPerson="1" PersonType="C"
   GuestRestriction MinPerson="1" MaxPerson="1" PersonType="I"
/GuestRestrictions
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The GuestRestrictions element defines a restriction with respect to guest groups, i. e. the number of adults, children and infants.
A restriction on a guest group always refers to the booking. Example: The rule will only be applied, if the booking comprises 2 adults and 2 children.
The MaxPerson attribute corresponds to the "No. of adults: To", "No. of children: To" and "No. of infants: To" fields in the tour operator's calculation and rules.

If multiple guest groups in the tour operator system are restricted by a rule, a GuestRestriction must be set for each group.

Example: The rule is only valid, if the booking comprises 2 adults, 1 child and 1 infant.

GuestRestrictions
   GuestRestriction MinPerson="2" MaxPerson="2" PersonType="A"
   GuestRestriction MinPerson="1" MaxPerson="1" PersonType="C"
   GuestRestriction MinPerson="1" MaxPerson="1" PersonType="I"
/GuestRestrictions</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="PersonType" type="PersonTypeEnum">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Das Element GuestRestrictions definiert eine Einschränkung bezogen auf Personengruppen und damit die Anzahl von Erwachsenen und Kindern.
Eine Restriktion in einer Personengruppe bezieht sich stets auf die Buchung. Beispiel: Die Regel findet nur Anwendung, wenn in der Buchung 2 Erwachsene und 2 Kinder sind.

Mögliche Werte:
* A: adult (Erwachsener)
* C: child (Kind)

Beispiel: Die Regel ist nur gültig, wenn in der Buchung 2 Erwachsene und 1 Kind sind.

GuestRestrictions
   GuestRestriction MinPerson="2" MaxPerson="2" PersonType="A"
   GuestRestriction MinPerson="1" MaxPerson="1" PersonType="C"
/GuestRestrictions
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The GuestRestrictions element defines a restriction with respect to guest groups, i. e. the number of adults, children and infants.
A restriction on a guest group always refers to the booking. Example: The rule will only be applied, if the booking comprises 2 adults and 2 children.

Possible values:
* A: adult
* C: child

Example: The rule is only valid, if the booking comprises 2 adults and 1 child.

GuestRestrictions
   GuestRestriction MinPerson="2" MaxPerson="2" PersonType="A"
   GuestRestriction MinPerson="1" MaxPerson="1" PersonType="C"
/GuestRestrictions</xs:documentation>
																</xs:annotation>
															</xs:attribute>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="FlightRestrictions" minOccurs="0" maxOccurs="1">
											<xs:annotation>
												<xs:documentation xml:lang="de">
Das Element FlightRestrictions definiert eine Einschränkung bezogen auf bestimmte Flugquellen, wie z.B. "Published", "Pooling", als auch den Fluganteil (Flugeinkaufspreis) der Buchung.
Dieses Element bezieht sich auf die Quelle und den Flugpreis aus der Veranstalter-Kalkulation / Regeln.

Pro unterschiedlicher Quelle und Preisspanne, wird eine FlightRestriction geschrieben.
												</xs:documentation>
												<xs:documentation xml:lang="en">
The FlightRestrictions element defines a restriction with respect to both, specific flight sources, e. g. Published or Pooling, as well as to the flight percentage (flight-related purchase price) of the booking.
This element refers to the source and the flight price from the tour operator's calculation and rules.

One FlightRestriction is written for each different source and price range.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="FlightRestriction" minOccurs="0" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation xml:lang="de">
Das Element FlightRestrictions definiert eine Einschränkung bezogen auf bestimmte Flugquellen, wie z.B. "Published", "Pooling", als auch den Fluganteil (Flugeinkaufspreis) der Buchung.
Dieses Element bezieht sich auf die Quelle und den Flugpreis aus der Veranstalter-Kalkulation / Regeln.

Pro unterschiedlicher Quelle und Preisspanne, wird eine FlightRestriction geschrieben.

Beispiel: Die Regel ist nur gültig für Pooling Flüge

FlightRestrictions
  FlightRestriction Source="Pooling"
 /FlightRestrictions


Beispiel: Die Regel ist nur gültig für Pooling Flüge mit eienr Preisspanne des Fluganteils (Einkauf) zwischen 0 - 300,00 EUR
FlightRestrictions
  FlightRestriction Source="Pooling"
  FlightRestriction MinPrice="0.00" MaxPrice="300.00"
 /FlightRestrictions
															</xs:documentation>
															<xs:documentation xml:lang="en">
The FlightRestrictions element defines a restriction with respect to both, specific flight sources, e. g. Published or Pooling, as well as to the flight percentage (flight-related purchase price) of the booking.
This element refers to the source and the flight price from the tour operator's calculation and rules.

One FlightRestriction is written for each different source and price range.

Example: The rule is only valid for pooling flights

FlightRestrictions
  FlightRestriction Source="Pooling"
 /FlightRestrictions


Example: The rule is only valid for pooling flights, where the flight percentage lies within a price range (purchase) from 0-300.00 EUR
FlightRestrictions
  FlightRestriction Source="Pooling"
  FlightRestriction MinPrice="0.00" MaxPrice="300.00"
 /FlightRestrictions</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:sequence>
																<xs:element ref="Sources" minOccurs="0" maxOccurs="1">
																	<xs:annotation>
																		<xs:documentation xml:lang="de">
Das Element Sources definiert die Quelle eines Fluges oder Hotels. 

Das Element ist optional. Es steuert, für welche Flug- und Hotelquellen eine Kalkulation gültig ist.

Mögliche Flugquellen sind zum Beispiel:

- Published
- Pooling

Mögliche Hotelquellen sind zum Beispiel:

- Hotelbeds


Gibt es keine Einschränkungen, d.h. die Regel gilt für alle Flug- und Hotelquellen, dann ist das Element "Sources" nicht zu schreiben. 

Wenn die Regel lediglich für eine oder zwei Flug- oder Hotelquellen gültig ist, dann sind diese explizit über das Attribut "Source" zu nennen. 


Beispiel: Die Regel ist nur gültig für Pooling Flüge

FlightRestrictions

  FlightRestriction

	Sources

	  Source ID=Pooling

   /Sources

 /FlightRestriction 

/FlightRestrictions

Hotelquellen werden unter HotelRestrictions angegeben.
																		</xs:documentation>
																		<xs:documentation xml:lang="en">
The Sources element defines the source of a flight or a hotel. 

The element is optional. It defines which flight and hotel sources a calculation applies to.

Possible flight sources:

- Published
- Pooling

Possible hotel sources:

- Hotelbeds


If there are no restrictions, i. e. the rule applies to all flight and hotel sources, the Sources element must not be defined. 

If the rule only applies to one or two flight or hotel sources, those sources must be explicitly specified via the Source attribute. 


Example: The rule is only valid for pooling flights

FlightRestrictions

  FlightRestriction

	Sources

	  Source ID=Pooling

   /Sources

 /FlightRestriction 

/FlightRestrictions

Hotel sources are specified under HotelRestrictions.</xs:documentation>
																	</xs:annotation>
																</xs:element>
															</xs:sequence>
															<xs:attribute name="MinPrice" type="xs:decimal">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Das Attribut "MinPrice" korrespondiert mit dem Feld "Flugpreis von" aus der Veranstalter-Kalkulation / Regeln.
Hier wird der Ab Preis des Fluganteils (Einkauf) transportiert, für den die Regel gilt.

Beispiel: Die Regel ist nur gültig für Published-Flüge mit einer Preisspanne des Fluganteils (Einkauf) zwischen 0 - 300,00 EUR
FlightRestrictions
  FlightRestriction Source="Published"
  FlightRestriction MinPrice="0.00" MaxPrice="300.00"
 /FlightRestrictions
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The MinPrice attribute corresponds to the "Flight price: From" field in the tour operator's calculation and rules.
The From price of the flight percentage (purchase) the rule applies to is propagated here.

Example: The rule is only valid for published flights, where the flight percentage lies within a price range (purchase) from 0-300.00 EUR
FlightRestrictions
  FlightRestriction Source="Published"
  FlightRestriction MinPrice="0.00" MaxPrice="300.00"
 /FlightRestrictions</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="MaxPrice" type="xs:decimal">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Das Attribut "MaxPrice" korrespondiert mit dem Feld "Flugpreis bis" aus der Veranstalter-Kalkulation / Regeln.
Hier wird der Bis Preis des Fluganteils (Einkauf) transportiert, für den die Regel gilt.

Beispiel: Die Regel ist nur gültig für Pooling-Flüge mit einer Preisspanne des Fluganteils (Einkauf) zwischen 0 - 300,00 EUR
FlightRestrictions
  FlightRestriction Source="Pooling"
  FlightRestriction MinPrice="0.00" MaxPrice="300.00"
 /FlightRestrictions
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The MaxPrice attribute corresponds to the "Flight price: To" field in the tour operator's calculation and rules.
The To price of the flight percentage (purchase) the rule applies to is propagated here.

Example: The rule is only valid for pooling flights, where the flight percentage lies within a price range (purchase) from 0-300.00 EUR
FlightRestrictions
  FlightRestriction Source="Pooling"
  FlightRestriction MinPrice="0.00" MaxPrice="300.00"
 /FlightRestrictions</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="Airline" type="xs:string">
																<xs:annotation>
																	<xs:documentation xml:lang="de">
Mit dem Attribut Airline kann man eine Regel erstellen, die auf eine spezifische Airline einschränkt.
z.B. Airline=AB =&gt; diese Regel wird nur bei einem Flug mit der Airline AB angewandt. Diese Rule muss im Outbound oder im Inbound zutreffen.
																	</xs:documentation>
																	<xs:documentation xml:lang="en"></xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="CabinClass" type="FlightClassEnum">
																<xs:annotation>
																	<xs:documentation xml:lang="de">Mit dem Attribut CabinClass kann man eine Regel erstellen, die auf eine spezifische Kabinenklasse einschränkt.
z.B. CabinClass=Y =&gt; diese Regel wird nur bei einem Flug mit der Klasse Y angewandt. Diese Rule muss im Outbound oder im Inbound zutreffen.
																	</xs:documentation>
																	<xs:documentation xml:lang="en"></xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="AirType" type="AirTypeEnum">
																<xs:annotation>
																	<xs:documentation xml:lang="de">Definition ob die Rule auf einen Charter- oder Linienflug angewendet werden soll.
Mögliche Typen:
* Charter
* Scheduled
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
Specifies whether the rule is available for a charter flight or a scheduled flight.
Possible types:
* Charter
* Scheduled
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="PriceRestrictions" minOccurs="0" maxOccurs="1">
											<xs:annotation>
												<xs:documentation xml:lang="de">Das Element PriceRestrictions definiert eine Einschränkung bezogen auf Netto-Gesamtpreise. 

Sofern ein Veranstalter keine Einschränkung auf einen Flug- oder Hotelpreis festlegen möchte, 
kann er hier Grenzen für einen Gesammtnettopreis festlegen, bei denen die Regel gelten soll.
												</xs:documentation>
												<xs:documentation xml:lang="en">
The element PriceRestrictions defines a restriction of the total net price. 

If a tour operator does not want to define price ranges for the flight or the hotel price, he can define 
price ranges for the total net price in this element.
												</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="PriceRestriction" minOccurs="0" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation xml:lang="de">Das Element PriceRestrictions definiert eine Einschränkung bezogen auf Netto-Gesamtpreise. 

Sofern ein Veranstalter keine Einschränkung auf einen Flug- oder Hotelpreis festlegen möchte, 
kann er hier Grenzen für einen Gesammtnettopreis festlegen, bei denen die Regel gelten soll.
															</xs:documentation>
															<xs:documentation xml:lang="en">
The element PriceRestrictions defines a restriction of the total net price. 

If a tour operator does not want to define price ranges for the flight or the hotel price, he can define 
price ranges for the total net price in this element.
															</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:attribute name="MinPrice" type="xs:decimal">
																<xs:annotation>
																	<xs:documentation xml:lang="de">Die Attribute "MinPrice" und "MaxPrice" dienen der Festlegung von Preisgrenzen, 
für die die Regel angewendet werden soll.
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The attributes "MinPrice" and "MaxPrice" are used to the define price ranges, for
which this rule is valid.</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="MaxPrice" type="xs:decimal">
																<xs:annotation>
																	<xs:documentation xml:lang="de">Die Attribute "MinPrice" und "MaxPrice" dienen der Festlegung von Preisgrenzen, 
für die die Regel angewendet werden soll.
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The attributes "MinPrice" and "MaxPrice" are used to the define price ranges, for
which this rule is valid.</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="ApplyTo" type="ApplianceTypeEnum" default="TotalPrice">
																<xs:annotation>
																	<xs:documentation xml:lang="de">ApplyTo stellt den Bezug zur Berechnung dar. Wird die Kalkulation auf den Gesamtpreis, auf den Flugpreis oder nur den Hotelpreis angewandt.
Der Wert FlightBasePrice bezieht sich auf den Flugbasispreis. Dieser muss im Flug mit dem Type=Base gekennzeichnet sein.

Mögliche Werte:
* TotalPrice
* HotelPrice
* FlightPrice
* FlightBasePrice

Wenn kein ApplyTo geschrieben wird, so bezieht sich die Kalkulation immer auf den Gesamtpreis. Derzeit wird im Player
nur der Wert TotalPrice in den PriceRestrictions unterstützt.

																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The attribute ApplyTo defines on which net price the PriceRestriction shall be applied:

Possible values:
* TotalPrice
* HotelPrice
* FlightPrice
* FlightBasePrice

TotalPrice is at the moment the only value, which is processed by the Player in this section.</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="ApplyToMode" type="PriceApplyToModeEnum">
																<xs:annotation>
																	<xs:documentation xml:lang="de">Mögliche Werte:
MaxAgePerson

MIt dem Wert MaxAgePerson wird nur auf die älteste Person kalkuliert.</xs:documentation>
																</xs:annotation>
															</xs:attribute>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
												<xs:attribute name="Operator" type="OperatorEnum" use="optional">
													<xs:annotation>
														<xs:documentation xml:lang="de">
Mögliche Werte:

* AND
* OR

Innerhalb einer ProductRestricition sind mehrere ProductRestriction ODER-verknüpft. Um die ODER-Verknüpfung aufzuheben  und in eine UND-Verknüpfung umzuwandeln, kann der Operator=AND genutzt werden. Bei der Verwendung des Operator=AND sind alle untergeordneten ProductRestriction UND-verknüpft. Um eine Kombination von UND und ODER-Verknüpfungen zu erzielen, kann innerhalb der Restriction ein Attribut Required genutzt werden. Als Default-Wert wird immer OR angenommen.
														</xs:documentation>
														<xs:documentation xml:lang="en">
Possible values:

* AND
* OR

Within one ProductRestricition, multiple ProductRestrictions are linked using OR. In order to cancel the OR operator and transform it into an AND operator, Operator=AND can be used. When using the Operator=AND, all subordinate ProductRestrictions are linked using AND. To combine AND and OR operators, the Required attribute can be used within the restriction. OR is always the assumed default.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
										<xs:element name="Appliances" minOccurs="0" maxOccurs="1">
											<xs:annotation>
												<xs:documentation xml:lang="de">Über die Appliances wird gesteuert, ob personenbasiert kalkuliert werden soll. Wenn eine Appliance mit Type="Person" geschrieben wird, dann werden alle 
mitreisenden Personen einzeln kalkuliert. Mithilfe der Attribute MinAge und MaxAge ist so zum Beispiel möglich für Kinder anders zu kalkulieren als 
für Erwachsene.

Zu beachten ist, dass bei Nutzung der Appliance für die personenbasierte Kalkulation die EK-Grenzen in Rules und Calculations pro Person betrachtet werden. 
Entsprechend muss eine Appliance mit Type="Person" gesetzt werden, wenn die EK-Grenzen personenbasiert betrachtet werden sollen.

Wird keine Appliance mit Type="Person" gesetzt, gelten Rule, Calculation und die jeweiligen EK-Grenzen für alle Mitreisenden. 
												</xs:documentation>
												<xs:documentation xml:lang="en">
By using the Appliances you can steer, if the Player shall calculate each travelling person differently. Therefore you can calculate children an adults
differently, if you write the Appliances and fill the attribute Type with the value "Person" and setting a MinAge and MaxAge. 

If the Appliances are used, the price ranges in the rules and calculations are considered per person. Therefore you can use this appliance, if you 
want the flight, hotel an total net prices to be considered for each person.

This element should not be written, if you want to calculate all travellers with one single calculation.
												</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="Appliance" minOccurs="0" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation xml:lang="de">Über die Appliances wird gesteuert, ob personenbasiert kalkuliert werden soll. Wenn eine Appliance mit Type="Person" geschrieben wird, dann werden alle 
mitreisenden Personen einzeln kalkuliert. Mithilfe der Attribute MinAge und MaxAge ist so zum Beispiel möglich für Kinder anders zu kalkulieren als 
für Erwachsene.

Zu beachten ist, dass bei Nutzung der Appliance für die personenbasierte Kalkulation die EK-Grenzen in Rules und Calculations pro Person betrachtet werden. 
Entsprechend muss eine Appliance mit Type="Person" gesetzt werden, wenn die EK-Grenzen personenbasiert betrachtet werden sollen.

Wird keine Appliance mit Type="Person" gesetzt, gelten Rule, Calculation und die jeweiligen EK-Grenzen für alle Mitreisenden. 
															</xs:documentation>
															<xs:documentation xml:lang="en">
By using the Appliances you can steer, if the Player shall calculate each travelling person differently. Therefore you can calculate children an adults
differently, if you write the Appliances and fill the attribute Type with the value "Person" and setting a MinAge and MaxAge. 

If the Appliances are used, the price ranges in the rules and calculations are considered per person. Therefore you can use this appliance, if you 
want the flight, hotel an total net prices to be considered for each person.

This element should not be written, if you want to calculate all travellers with one single calculation.
															</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:attribute name="Type" type="ApplianceEnum">
																<xs:annotation>
																	<xs:documentation xml:lang="de">Mögliche Werte:

Person

Über die Appliances wird gesteuert, ob personenbasiert kalkuliert werden soll. Wenn eine Appliance mit Type="Person" geschrieben wird, dann werden alle 
mitreisenden Personen einzeln kalkuliert. Mithilfe der Attribute MinAge und MaxAge ist so zum Beispiel möglich für Kinder anders zu kalkulieren als 
für Erwachsene.

Zu beachten ist, dass bei Nutzung der Appliance für die personenbasierte Kalkulation die EK-Grenzen in Rules und Calculations pro Person betrachtet werden. 
Entsprechend muss eine Appliance mit Type="Person" gesetzt werden, wenn die EK-Grenzen personenbasiert betrachtet werden sollen.

Wird keine Appliance mit Type="Person" gesetzt, gelten Rule, Calculation und die jeweiligen EK-Grenzen für alle Mitreisenden. 
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
Possible values:
Person

By using the Appliances you can steer, if the Player shall calculate each travelling person differently. Therefore you can calculate children an adults
differently, if you write the Appliances and fill the attribute Type with the value "Person" and setting a MinAge and MaxAge. 

If the Appliances are used, the price ranges in the rules and calculations are considered per person. Therefore you can use this appliance, if you 
want the flight, hotel an total net prices to be considered for each person.

This element should not be written, if you want to calculate all travellers with one single calculation.</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="MinAge">
																<xs:annotation>
																	<xs:documentation xml:lang="de">Angabe einer Mindestalters.

Beispiel

MinAge=12:
Gültigkeit erst ab einem Mindestalter von 12 Jahren.

Die Altersangabe wird nur im Zusammenhang mit Type=Person beachtet.
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
Specifies a minimum age.

Example

MinAge=12:
Only valid from a minimum age of 12 years.

The specification of age is only observed in conjunction with Type=Person.</xs:documentation>
																</xs:annotation>
																<xs:simpleType>
																	<xs:restriction base="xs:int">
																		<xs:minInclusive value="0"/>
																		<xs:maxInclusive value="255"/>
																	</xs:restriction>
																</xs:simpleType>
															</xs:attribute>
															<xs:attribute name="MaxAge">
																<xs:annotation>
																	<xs:documentation xml:lang="de">Angabe einer Mindestalters.

Beispiel

MinAge=12:
Gültigkeit erst ab einem Mindestalter von 12 Jahren.

Die Altersangabe wird nur im Zusammenhang mit Type=Person beachtet.
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
Specifies a minimum age.

Example

MinAge=12:
Only valid from a minimum age of 12 years.

The specification of age is only observed in conjunction with Type=Person.</xs:documentation>
																</xs:annotation>
																<xs:simpleType>
																	<xs:restriction base="xs:int">
																		<xs:minInclusive value="1"/>
																		<xs:maxInclusive value="255"/>
																	</xs:restriction>
																</xs:simpleType>
															</xs:attribute>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element name="CompatibleRules" minOccurs="0" maxOccurs="1">
											<xs:annotation>
												<xs:documentation xml:lang="de">CompatibleRules ist ein übergeordnetes Element, welches alle CompatibleWith Elemente zusammenfasst.
Mit CompatibleWith kann die Kompatibilität zwischen Rules ausgedrückt oder unterdrückt werden, durch Invertierung.
Defaultmäßig sind nur Rules mit Ihrer eigenen CombiGroupId kombinierbar.
												</xs:documentation>
												<xs:documentation xml:lang="en">
CompatibleRules is a parent element, that encompasses all CompatibleWith elements.
Using CompatibleWith the compatibility between rules can be expressed or suppressed through inversion.
Only rules with the same CombiGroupId can be combined, by default.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="CompatibleWith" minOccurs="0" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation xml:lang="de">Mit CompatibleWith kann die Kompatibilität zwischen Rules ausgedrückt oder unterdrückt werden, durch Invertierung.
															</xs:documentation>
															<xs:documentation xml:lang="en">
Using CompatibleWith the compatibility between rules can be expressed or suppressed through inversion.</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:attribute name="GroupId" type="xs:int">
																<xs:annotation>
																	<xs:documentation xml:lang="de">Das Attribut GroupId gibt einen Verweis auf Rules mit entsprechender CombiGroupId.
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The GroupId attribute refers to rules with the corresponding CombiGroupId.</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="Invert" type="xs:boolean">
																<xs:annotation>
																	<xs:documentation xml:lang="de">Das Attribut Invert ist nur zu setzen, sofern Rules einer bestimmten CombiGroupId invertiert werden sollen.
Ist keine Invertierung gewünscht, muss das Attribut nicht geschrieben  werden. 
Daher ist der Defaultwert false.
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
The Invert attribute is only set, if rules of a specific CombiGroupId are to be inverted.
If no inversion is desired, the attribute need not be written. 
Therefore, the default is False.</xs:documentation>
																</xs:annotation>
															</xs:attribute>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="Name" type="xs:string">
										<xs:annotation>
											<xs:documentation xml:lang="de">
Name der Regel bzw. Restriction gem. dem Feld "Bezeichnung" des Veranstalter-Kalkulationssystems / Regeln.
											</xs:documentation>
											<xs:documentation xml:lang="en">
The name of the rule or restriction based on the "Identifier" field in the tour operator's accounting system and rules.</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="SortIndex" type="xs:integer">
										<xs:annotation>
											<xs:documentation xml:lang="de">
Der SortIndex beschreibt die Priorität der Regel. Dabei hat der kleinste Wert die höchste Priorität.
Für jedes Reiseprodukt, das kalkuliert wird, kann genau eine Regel zutreffen. Die Regel mit der höchsten Priorität, welche die Anwendungsbedingungen erfüllt, wird zu Grunde gelegt.
Das Feld SortIndex wird mit dem Inhalt des Feldes "Index" aus dem Veranstalter-Kalkulationssystem befüllt.
0 = höchste Prioriät
999 = niedrigste Priorität
											</xs:documentation>
											<xs:documentation xml:lang="en">
SortIndex describes the priority of the rule. The lower the value, the higher the priority.
For each travel product calculated, exactly one rule can apply. The rule with the highest priority satisfying the application conditions serves as the basis.
The SortIndex field is populated with the contents of the "Index" field from the tour operator's accounting system.</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="CalculationName" type="xs:string">
										<xs:annotation>
											<xs:documentation xml:lang="de">
Das Attribut "CalculationName" transportiert den Kalkulationsnamen, der in dem Veranstaltersystem unter "Regeldetails", Feld "Bezeichnung" hinterlegt ist.
Der Kalkulationsname ist der Schlüssel zur Ermittlung der eigentlichen Kalkulation. Über den Kalkulationsnamen wird auf die Kalkulation verwiesen, die der Regel zu Grunde liegt.

Der Verweis auf die für die Regel gültige Kalkulation wird über das Element "CalculationName" gesteuert.
											</xs:documentation>
											<xs:documentation xml:lang="en">
The CalculationName attribute specifies the calculation name indicated under "Rule Details" ("Identifier" field) in the tour operator system.
The calculation name is the key to the actual calculation. The calculation name references the underlying calculation of the rule.

The applicable rule for the calculation is referenced by the CalculationName element.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="CombiGroupId" type="xs:integer">
										<xs:annotation>
											<xs:documentation xml:lang="de">Wird für die Kombinierbarkeit gebraucht. Gibt an zu welcher Konbinierungsgruppe diese Regel gehört 
											</xs:documentation>
											<xs:documentation xml:lang="en">
It is crucial for the combinability. It shows to which combination-group the rule belongs. </xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="Mandatory" type="MandatoryEnum" use="optional">
										<xs:annotation>
											<xs:documentation xml:lang="de">Mögliche Werte: 
* True 
* False, Disable 
* Include 
* Exclude 

Mandatory=True -&gt; Preis bzw. Extra wird mit eingerechnet 
Mandatory=False/Disabled -&gt; Extra wird verworfen und nicht mit eingerechnet 
Mandatory=Include -&gt; Extra wird mit eingerechnet, aber dieser Extra-Preis wird zusätzlich noch einzeln mit ausgegeben 
Mandatory=Exclude -&gt; Extra wird nicht mit eingerechnet, aber dieser Extra-Preis wird zusätzlich noch einzeln mit ausgegeben 
Der Defaultwert ist true 
											</xs:documentation>
											<xs:documentation xml:lang="en"> 

The default value is True.</xs:documentation>
										</xs:annotation>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Calculations" minOccurs="1" maxOccurs="1">
					<xs:annotation>
						<xs:documentation xml:lang="de">
Das Calculations-Element ist eine Liste von Calculation-Elementen.
						</xs:documentation>
						<xs:documentation xml:lang="en">
The Calculations element is a list of Calculation elements.
						</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="Rounding" minOccurs="0" maxOccurs="1">
								<xs:annotation>
									<xs:documentation xml:lang="de">
Das Rounding-Element legt fest, wie Preise, auf die eine Kalkulation angewendet wird, gerundet werden.
									</xs:documentation>
									<xs:documentation xml:lang="en">
The Rounding element specifies the rounding of the prices to which a calculation is applied.
									</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Calculation" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation xml:lang="de">
Das Calculation-Element definiert eine Kalkulation.
Über einen eindeutigen Kalkulationsnamen und/oder Kalkulationscode wird von der Regel (Restriction) auf die jeweilige Kalkulation verwiesen.

Beispiel:
Calculations
  Calculation Name="Weihnachten Beach" Code="WEBE"
	  .....
/Calculations
									</xs:documentation>
									<xs:documentation xml:lang="en">
The Calculation element defines a calculation.
The rule (restriction) references the respective calculation by a unique calculation name and/or calculation code.

Example:
Calculations
  Calculation Name="Weihnachten Beach" Code="WEBE"
	  .....
/Calculations</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Charges" minOccurs="0" maxOccurs="1">
											<xs:annotation>
												<xs:documentation xml:lang="de">
Das Element "Charges" enthält alle Zu- und Abschläge sowie Fixpreise, die bei der Kalkulation berechnet werden sollen.
Das Element "Charges" kann genau einmal auftreten. Es ist ein Kontainer für den Transport von "Charge", bei dem unterschiedliche Preisspannen des Pauschal-Einkaufspreises gelten können.
												</xs:documentation>
												<xs:documentation xml:lang="en">
The Charges element comprises any extra charges, reductions and fixed prices to be included in the calculation.
The Charges element can occur exactly once. It provides a container for the Charge element, which supports different price ranges for the package purchase price.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="Charge" minOccurs="0" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation xml:lang="de">
Das Element "Charge" kann mehrfach auftreten. Je unterschiedlicher Kalkulationsstufe und deren Preisberechnung wird ein "Charge" Element geschrieben.
Es korrespondiert zu den Feldern der "Kalkulationsstufen" aus dem Veranstalter-Kalkulationssystem. Je Stufe erhält eine Charge eine "Id". Die "Id" dient der besseren Übersicht. Die erste Stufe erhält die "Id" 1, die zweite Stufe, "Id" 2, etc.
Es besteht die feste Regel, dass zunächst Fixe Zuschläge berechnet werden und dann von dem Gesamtbetrag ein prozentualer Aufschlag errechnet wird.

Beispiel: 
In Stufe 1: beträgt der Pauschal Einkaufspreis 0 - 399,00 EUR, besteht ein Aufschlag von 32,00 EUR und ein prozentualer Zuschlag auf den Pauschal EK von 21 Prozent.
In Stufe 2: beträgt der Pauschal Einkaufspreis 400,00 EUR - 598,00 EUR, besteht ein Aufschlag von 32,00 EUR und ein prozentualer Zuschlag auf den Pauschal EK von 20 Prozent.

Calculations
  Calculation Mode="AbsoluteRelative"
	Charges
	  Charge  Id="1"
		Range Min="0.00" Max="399.00"
		Pricing Amount="32.00" Percent="21.00"
	  /Charge
	  Charge  Id="2"
		Range Min="400.00" Max="598.00"
		Pricing Amount="32.00" Percent="20.00"
	  /Charge
	/Charges
  /Calculation
/Calcualtions
															</xs:documentation>
															<xs:documentation xml:lang="en">
The Charge element can occur more than once. A Charge element is written for every calculation level and associated price calculation.
This element corresponds to the "Calculation level" fields from the tour operator's accounting system. To provide a better overview, each Charge is assigned a specific level Id. The first level receives Id 1, the second Id 2 and so forth.
There is a general rule stating that fixed extra charges are calculated first to subsequently calculate a percentage markup from the total amount.

Example: 
On level 1, the package purchase price is 0-399.00 EUR and the extra charges amount to 32.00 EUR and the percentage markup to the package purchase price to 21 percent.
On level 2, the package purchase price is 400.00-598.00 EUR and the extra charges amount to 32.00 EUR and the percentage markup to the package purchase price to 20 percent.

Calculations
  Calculation Mode="AbsoluteRelative"
	Charges
	  Charge  Id="1"
		Range Min="0.00" Max="399.00"
		Pricing Amount="32.00" Percent="21.00"
	  /Charge
	  Charge  Id="2"
		Range Min="400.00" Max="598.00"
		Pricing Amount="32.00" Percent="20.00"
	  /Charge
	/Charges
  /Calculation
/Calculations</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:sequence>
																<xs:element name="Range" minOccurs="0" maxOccurs="1">
																	<xs:annotation>
																		<xs:documentation xml:lang="de">
Das Element "Range" ist eine Bedingung. Sofern der Pauschal Einkaufspreis in diese Preisspanne fällt, wird die Aufschlagskalkulation in dem Element "Pricing" angewendet.

Beispiel: 
In Stufe 1: beträgt der Pauschal Einkaufspreis 0 - 399,00 EUR, besteht ein Aufschlag von 32,00 EUR und ein prozentualer Zuschlag auf den Pauschal EK von 21 Prozent.
In Stufe 2: beträgt der Pauschal Einkaufspreis 400,00 EUR - 598,00 EUR, besteht ein Aufschlag von 32,00 EUR und ein prozentualer Zuschlag auf den Pauschal EK von 20 Prozent.

Calculations
  Calculation Mode="AbsoluteRelative"
	Charges
	  Charge  Id="1"
		Range Min="0.00" Max="399.00"
		Pricing Amount="32.00" Percent="21.00"
	  /Charge
	  Charge  Id="2"
		Range Min="400.00" Max="598.00"
		Pricing Amount="32.00" Percent="20.00"
	  /Charge
	/Charges
  /Calculation
/Calcualtions
																		</xs:documentation>
																		<xs:documentation xml:lang="en">
The Range element constitutes a condition. If the package purchase price falls into this price range, the markup calculation is applied in the Pricing element.

Example: 
On level 1, the package purchase price is 0-399.00 EUR and the extra charges amount to 32.00 EUR and the percentage markup to the package purchase price to 21 percent.
On level 2, the package purchase price is 400.00-598.00 EUR and the extra charges amount to 32.00 EUR and the percentage markup to the package purchase price to 20 percent.

Calculations
  Calculation Mode="AbsoluteRelative"
	Charges
	  Charge  Id="1"
		Range Min="0.00" Max="399.00"
		Pricing Amount="32.00" Percent="21.00"
	  /Charge
	  Charge  Id="2"
		Range Min="400.00" Max="598.00"
		Pricing Amount="32.00" Percent="20.00"
	  /Charge
	/Charges
  /Calculation
/Calculations</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:attribute name="Min" type="xs:decimal">
																			<xs:annotation>
																				<xs:documentation xml:lang="de">
Das Attribut "Min" korrespondiert mit del Feld "ab €" aus der Veranstalter-Kalkulation.
Sofern der Pauschal Einkaufspreis in diese Preisspanne fällt, die sich aus den Attributen "Min" und "Max" ergibt, wird die Aufschlagskalkulation in dem Element "Pricing" angewendet.

Beispiel: 
In Stufe 1: beträgt der Pauschal Einkaufspreis 0 - 399,00 EUR, besteht ein Aufschlag von 32,00 EUR und ein prozentualer Zuschlag auf den Pauschal EK von 21 Prozent.
In Stufe 2: beträgt der Pauschal Einkaufspreis 400,00 EUR - 598,00 EUR, besteht ein Aufschlag von 32,00 EUR und ein prozentualer Zuschlag auf den Pauschal EK von 20 Prozent.

Calculations
  Calculation
	Charges
	  Charge  Id="1"
		Range Min="0.00" Max="399.00"
		Pricing Amount="32.00" Percent="21.00"
	  /Charge
	  Charge  Id="2"
		Range Min="400.00" Max="598.00"
		Pricing Amount="32.00" Percent="20.00"
	  /Charge
	/Charges
  /Calculation
/Calcualtions
																				</xs:documentation>
																				<xs:documentation xml:lang="en">
The Min attribute corresponds to the "From €" field in the tour operator's calculation.
If the package purchase price falls into the price range that results from the Min and Max attributes, the markup calculation is applied in the Pricing element.

Example: 
On level 1, the package purchase price is 0-399.00 EUR and the extra charges amount to 32.00 EUR and the percentage markup to the package purchase price to 21 percent.
On level 2, the package purchase price is 400.00-598.00 EUR and the extra charges amount to 32.00 EUR and the percentage markup to the package purchase price to 20 percent.

Calculations
  Calculation
	Charges
	  Charge  Id="1"
		Range Min="0.00" Max="399.00"
		Pricing Amount="32.00" Percent="21.00"
	  /Charge
	  Charge  Id="2"
		Range Min="400.00" Max="598.00"
		Pricing Amount="32.00" Percent="20.00"
	  /Charge
	/Charges
  /Calculation
/Calculations</xs:documentation>
																			</xs:annotation>
																		</xs:attribute>
																		<xs:attribute name="Max" type="xs:decimal">
																			<xs:annotation>
																				<xs:documentation xml:lang="de">
Das Attribut "Max" ist nicht direkt in der Veranstalter-Kalkulation vorhanden. Es ergibt sich jedoch durch Differenzrechnung aus der nächsten Preisspanne (nächste Preisspanne, Feld "ab €" minus 1).
Sofern der Pauschal Einkaufspreis in diese Preisspanne fällt, die sich aus den Attributen "Min" und "Max" ergibt, wird die Aufschlagskalkulation in dem Element "Pricing" angewendet.

Beispiel: 
In Stufe 1: beträgt der Pauschal Einkaufspreis 0 - 399,00 EUR, besteht ein Aufschlag von 32,00 EUR und ein prozentualer Zuschlag auf den Pauschal EK von 21 Prozent.
In Stufe 2: beträgt der Pauschal Einkaufspreis 400,00 EUR - 598,00 EUR, besteht ein Aufschlag von 32,00 EUR und ein prozentualer Zuschlag auf den Pauschal EK von 20 Prozent.

Calculations
  Calculation Mode="AbsoluteRelative"
	Charges
	  Charge  Id="1"
		Range Min="0.00" Max="399.00"
		Pricing Amount="32.00" Percent="21.00"
	  /Charge
	  Charge  Id="2"
		Range Min="400.00" Max="598.00"
		Pricing Amount="32.00" Percent="20.00"
	  /Charge
	/Charges
  /Calculation
/Calcualtions
																				</xs:documentation>
																				<xs:documentation xml:lang="en">
The Max attribute is not directly included in the tour operator's calculation, but results from calculating the difference from the next price range (next price range, "From €" field minus 1).
If the package purchase price falls into the price range that results from the Min and Max attributes, the markup calculation is applied in the Pricing element.

Example: 
On level 1, the package purchase price is 0-399.00 EUR and the extra charges amount to 32.00 EUR and the percentage markup to the package purchase price to 21 percent.
On level 2, the package purchase price is 400.00-598.00 EUR and the extra charges amount to 32.00 EUR and the percentage markup to the package purchase price to 20 percent.

Calculations
  Calculation Mode="AbsoluteRelative"
	Charges
	  Charge  Id="1"
		Range Min="0.00" Max="399.00"
		Pricing Amount="32.00" Percent="21.00"
	  /Charge
	  Charge  Id="2"
		Range Min="400.00" Max="598.00"
		Pricing Amount="32.00" Percent="20.00"
	  /Charge
	/Charges
  /Calculation
/Calculations</xs:documentation>
																			</xs:annotation>
																		</xs:attribute>
																	</xs:complexType>
																</xs:element>
																<xs:element name="Pricing" minOccurs="0" maxOccurs="1">
																	<xs:annotation>
																		<xs:documentation xml:lang="de">
Das Element "Pricing" enthält die Werte für die Verkaufspreis-Kalkulation.

Die Kalkulation kann auf 3 Wegen erfolgen:
* Absoluter Zuschlag oder Abschlag pro Buchung (Amount)
* Prozentualer Zuschlag oder Abschlag pro Buchung (Percent)
* Übersteuen eines fixen Verkaufspreises (FixedPreis)
																		</xs:documentation>
																		<xs:documentation xml:lang="en">
The Pricing element contains the values for calculating the sales price.

There are 3 calculation methods:
* Absolute additional charges or reductions per booking (Amount)
* Percentage additional charges or reductions per booking (Percent)
* Overriding a fixed sales price (FixedPrice)
																		</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:attribute name="Amount" type="xs:double">
																			<xs:annotation>
																				<xs:documentation xml:lang="de">
Das Attribut "Amount" beinhaltet den absoluten Zu- oder Abschlag aus dem Feld "Berechnung" der Veranstalter-Kalkulation, sofern die Kalkulationsart (Attribut "Mode") den Wert "AbsoluteRelative" hat.
Zuschläge werden als positive Werte transportiert. Abschläge werden als negative Werte transportiert.

Bei der Kalkulationsart Fixwert (Attribut Mode="Fix") steuert das Attribut "Amount" den Fixwert.

Bei der Kalkulationsart "AbsoluteRelative" kann das Attribut "Amount" in Verbindung mit dem Attribut "Percent" gesetzt werden. In diesem Falle wird zuerst der prozentuale Zu- oder Abschlag errechnet und dann der absolute Betrag addiert.

Beispiel: 
In Stufe 1: beträgt der Pauschal Einkaufspreis 0 - 399,00 EUR, besteht ein Aufschlag von 32,00 EUR und ein prozentualer Zuschlag auf den Pauschal EK von 21 Prozent.
In Stufe 2: beträgt der Pauschal Einkaufspreis 400,00 EUR - 598,00 EUR, besteht ein Aufschlag von 32,00 EUR und ein prozentualer Zuschlag auf den Pauschal EK von 20 Prozent.

Calculations
  Calculation Mode="AbsoluteRelative"
	Charges
	  Charge  Id="1"
		Range Min="0.00" Max="399.00"
		Pricing Amount="32.00" Percent="21.00"
	  /Charge
	  Charge  Id="2"
		Range Min="400.00" Max="598.00"
		Pricing Amount="32.00" Percent="20.00"
	  /Charge
	/Charges
  /Calculation
/Calcualtions
																				</xs:documentation>
																				<xs:documentation xml:lang="en">
The Amount attribute contains the absolute additional charges or reductions from the "Calculation" field in the tour operator's calculation, provided the calculation type (Mode attribute) is AbsoluteRelative.
Additional charges are propagated as positive values. Reductions are propagated as negative values.

Calculation types based on the Fix value (Attribute Mode="Fix") use the Amount attribute to control the fixed value.

Calculation types based on the AbsoluteRelative value can combine the Amount attribute with the Percent attribute. In this case, the percentage additional charges or reductions are calculated first, to subsequently add the total amount.

Example: 
On level 1, the package purchase price is 0-399.00 EUR and the extra charges amount to 32.00 EUR and the percentage markup to the package purchase price to 21 percent.
On level 2, the package purchase price is 400.00-598.00 EUR and the extra charges amount to 32.00 EUR and the percentage markup to the package purchase price to 20 percent.

Calculations
  Calculation Mode="AbsoluteRelative"
	Charges
	  Charge  Id="1"
		Range Min="0.00" Max="399.00"
		Pricing Amount="32.00" Percent="21.00"
	  /Charge
	  Charge  Id="2"
		Range Min="400.00" Max="598.00"
		Pricing Amount="32.00" Percent="20.00"
	  /Charge
	/Charges
  /Calculation
/Calculations</xs:documentation>
																			</xs:annotation>
																		</xs:attribute>
																		<xs:attribute name="Percent" type="xs:decimal">
																			<xs:annotation>
																				<xs:documentation xml:lang="de">
Das Attribut "Percent" beinhaltet den prozentualen Zu- oder Abschlag aus dem Feld "%" der Veranstalter-Kalkulation. Dieses Attribut wird nur bei der Kalkulationsart "AbsoluteRelative" gesetzt.
Zuschläge werden als positive Werte transportiert. Abschläge werden als negative Werte transportiert.

Das Attribut "Percent" kann in Verbindung mit dem Attribut "Amount" gesetzt werden. In diesem Falle wird zuerst der prozentuale Zu- oder Abschlag errechnet und dann der absolute Betrag addiert.

Beispiel: 
In Stufe 1: beträgt der Pauschal Einkaufspreis 0 - 399,00 EUR, besteht ein Aufschlag von 32,00 EUR und ein prozentualer Zuschlag auf den Pauschal EK von 21 Prozent.
In Stufe 2: beträgt der Pauschal Einkaufspreis 400,00 EUR - 598,00 EUR, besteht ein Aufschlag von 32,00 EUR und ein prozentualer Zuschlag auf den Pauschal EK von 20 Prozent.

Calculations
  Calculation Mode="AbsoluteRelative"
	Charges
	  Charge  Id="1"
		Range Min="0.00" Max="399.00"
		Pricing Amount="32.00" Percent="21.00"
	  /Charge
	  Charge  Id="2"
		Range Min="400.00" Max="598.00"
		Pricing Amount="32.00" Percent="20.00"
	  /Charge
	/Charges
  /Calculation
/Calcualtions
																				</xs:documentation>
																				<xs:documentation xml:lang="en">
The Percent attribute contains the percentage additional charges or reductions from the "%" field in the tour operator's calculation. This attribute is only specified for the AbsoluteRelative calculation type.
Additional charges are propagated as positive values. Reductions are propagated as negative values.

The Percent attribute can be combined with the Amount attribute. In this case, the percentage additional charges or reductions are calculated first, to subsequently add the total amount.

Example: 
On level 1, the package purchase price is 0-399.00 EUR and the extra charges amount to 32.00 EUR and the percentage markup to the package purchase price to 21 percent.
On level 2, the package purchase price is 400.00-598.00 EUR and the extra charges amount to 32.00 EUR and the percentage markup to the package purchase price to 20 percent.

Calculations
  Calculation Mode="AbsoluteRelative"
	Charges
	  Charge  Id="1"
		Range Min="0.00" Max="399.00"
		Pricing Amount="32.00" Percent="21.00"
	  /Charge
	  Charge  Id="2"
		Range Min="400.00" Max="598.00"
		Pricing Amount="32.00" Percent="20.00"
	  /Charge
	/Charges
  /Calculation
/Calculations</xs:documentation>
																			</xs:annotation>
																		</xs:attribute>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
															<xs:attribute name="Id" type="xs:int" />
															<xs:attribute name="StayMode" type="ChargeStayModeEnum">
																<xs:annotation>
																	<xs:documentation xml:lang="de">Steuert ob die Calculation auf den Gesamtpreis angewendet werden soll oder auf den Preis pro Nacht für die Hoteldauer oder für die Flugdauer.
Mögliche Werte:
None (default) - Kalkulation wird auf den Gesamtpreis berechnet, also über alle Tage zusammen.
Hotel - Kalkulation wird nächteweise auf die Hoteldauer berechnet
Flight - Kalkulation wird nächteweise auf die Flugdauer berechnet

Bsp: 7 Tage mit Übernachtsflug, deswegen nur 6 Tage Hotelaufenthalt
Charge StayMode=None
  Pricing Amount=30

Es werden einmalig 30 € auf den Gesamtpreis berechnet

Charge StayMode=Hotel
  Pricing Amount=30

Es werden 6 mal 30€ = 180€ auf den Gesamtpreis berechnet, wegen der 6 Tage Hoteldauer.

Charge StayMode=Flight
  Pricing Amount=30

Es werden 7 mal 30€ = 210€ auf den Gesamtpreis berechnet, wegen der 7 Tage Flugdauer.
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
Steers whether the calculation should be applied to the total price or to the price per night for hotel duration or flight duration

Possible values:

None (default) - calculation is applied to total price, meaning to all days in total
Hotel - calculation is applied to hotel duration (per night) 
Flight - calculation is applied to flight duration (per night)

Example: 7 days with overnight flight, thus only 6 days hotel stay
Charge StayMode=None
  Pricing Amount=30

30 € are calculated one-time to total price 

Charge StayMode=Hotel
  Pricing Amount=30

6 times 30€ = 180€ are calculated to total price (due to hotel duration of 6 days)

Charge StayMode=Flight
  Pricing Amount=30

7 times 30€ = 210€ are calculated to total price (due to flight duration of 7 days)

																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="PersonMode" type="ChargePersonModeEnum">
																<xs:annotation>
																	<xs:documentation xml:lang="de">Steuert wie die Preise berechnet werden.

Mögliche Werte:
None (default) - es soll auf den Gesamtflugpreis, GesamtHotelpreis oder Gesamtpreis kalkuliert werden, also über alle mitreisenden Personen. Es findet keine Aufteilung auf die einzelnen Personen statt.
PerPerson - wenn PerPerson gesetzt ist, so soll auf den pro Personen Flugpreis, Hotelpreis oder Gesamtpreis kalkuliert werden. D.h. die Calculation wird für jede Person angewendet.
TotalToPerson -wenn TotalToPerson gesetzt ist, so soll auf den Fluggesamtpreis, Hotelgesamtpreis oder Gesamtpreis (Flug+Hotel) kalkuliert werden, also über alle mitreisenden Personen. 
D.h. die Calculation wird einmalig angewendet, aber dann auf die Mitreisenden Personen aufgeteilt.
																	</xs:documentation>
																	<xs:documentation xml:lang="en">
Steers how the prices are calculated

Possible values:
None (default) - calculation on total flight price, total hotel price or total price for all travellers. There is no allocation to each traveller separately.
PerPerson - when PerPerson is set, the calculation is applied to per person flight price, hotel price or total price. The calculation is applied to each person separately.
TotalToPerson -when TotalToPerson is set, the calculation is applied to total flight price, total hotel price or total price (flight + hotel), i.e. for all travellers.  
I.e. the calculation is applied once and allocated to each traveller afterwards.

																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="Name" type="xs:string">
										<xs:annotation>
											<xs:documentation xml:lang="de">
Das Name-Attribut legt den Kalkulationsnamen fest.
Der Kalkulationsname ist der Schlüssel zur Ermittlung der eigentlichen Kalkulation. Über den Kalkulationsnamen der Restriktions (Regeln, Attribut "CalculationName" wird auf die Kalkulation verwiesen, die der Regel zu Grunde liegt.
											</xs:documentation>
											<xs:documentation xml:lang="en">
The Name attribute specifies the calculation name.
The calculation name is the key to the actual calculation. The calculation name of the restrictions (rules, CalculationName attribute) references the underlying calculation of the rule.</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="Mode" type="ModeEnum">
										<xs:annotation>
											<xs:documentation xml:lang="de">
Das Attribut "Mode" steuert die Art der Kalkulation:
Mögliche Werte:
* AbsoluteRelative
* RelativeAbsolute
* Fix

Der Wert AbsoluteRelative steuert die Aufschlagskalkulation in Form eines Zu- oder Abschlags. Hier wird auf den Ausgangspreis zuerst der Prozentsatz angewendet und dann der Amount.
Beispiel:  (100 € + 5% )+ 10€ = 115€
Der Wert RelativeAbsolute steuert die Aufschlagskalkulation in Form eines Zu- oder Abschlags. Hier wird auf den Ausgangspreis zuerst der Amount angewendet und auf diesen Wert dann der Prozentsatz
Beispiel:  (100 € + 10€) + 5% = 115,50€
Der Wert "Fix" dient dazu, einen festen Verkaufspreis anhand einer Range des Pauschal Einkaufspreises zu ermitteln. Der Pauschalverkaufspreis gilt pro Buchung.
											</xs:documentation>
											<xs:documentation xml:lang="en">
The Mode attribute specifies the type of the calculation:
Possible values:
* AbsoluteRelative
* RelativeAbsolute
* Fix

The AbsoluteRelative value controls the markup calculation, i. e. additional or reduced charges.
The Fix value is used to derive a fixed sales price basing on a range of the package purchase price. The package sales price applies per booking.</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="ApplyTo" type="ApplianceTypeEnum" default="TotalPrice">
										<xs:annotation>
											<xs:documentation xml:lang="de">
Das ApplyTo-Attribut legt fest, auf was die Kalkulation angewandt wird.

Mögliche Werte:
* TotalPrice: Die Kalkulation wird auf den Gesamtpreis angewandt.
* HotelPrice: Die Kalkulation wird auf den Hotelpreis angewandt.
* FlightPrice: Die Kalkulation wird auf den Flugpreis angewandt.
* FlightBasePrice: Die Kalkulation wird auf den Flugbasispreis angewandt. Dieser muss in der Flug-EDF-Datei mit Type="Base" gekennzeichnet sein.
											</xs:documentation>
											<xs:documentation xml:lang="en">
The ApplyTo attribute specifies what the calculation is applied to.

Possible values:
* TotalPrice: The calculation is applied to the total price.
* HotelPrice: The calculation is applied to the hotel price.
* FlightPrice: The calculation is applied to the flight price.
* FlightBasePrice: The calculation is applied to the flight base price. This price component must have Type="Base" in the flight EDF file.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="AutoAppliance" type="xs:boolean" use="optional">
										<xs:annotation>
											<xs:documentation xml:lang="de">Das Attribut AutoAppliance kann genutzt werden, wenn man mehrere Kalkulationen auf eine Preiskomponente anwenden möchte. Hier kann unterschieden werden zwischen
1. die Kalkulation wird auf den bereits kalkulierten Wert angewendet. (AutoAppliance=true) oder
2. die Kalkulation wird immer auf den Einkaufspreis angewendet (AutoAppliance=false)

Mögliche Werte:
true - Defaultwert - wenn mehrere Kalkulationen auf eine Preiskomponente(Hotel price, Flight price oder total price) wirken, so wird per default die nächste Berechnung immer auf den bereits berechneten Preis aufaddiert
Bsp:
Hotelpreis 100€
1. Calculation +20%
2. Calculation +30€
3. Calculation +10%
Berechnung: 100 + (100*0,2) + 30 + ((100 + (100*0,2) + 30)*0,1) = 180

false - wenn mehrere Kalkulationen auf eine Preiskomponente(Hotel price, Flight price oder total price) wirken, so wird die zu berechnende Kalkulation immer auf den EK Preis addiert
Bsp:
Hotelpreis 100€
1. Calculation +20%
2. Calculation +30€
4. Calculation +10%
Berechnung: 100 + (100*0,2) + 30 + (100*0,1) = 160
											</xs:documentation>
											<xs:documentation xml:lang="en">

The attribute AutoAppliance can be used, if several calculations should impact a price component (e.g. hotel price, flight price or total price). You can decide whether
1. the calculation is applied on the calculated price (AutoAppliance=true) or
2. the calculation is applied on the purchase price (AutoAppliance=false)

Possible values:
true - default value
Example:
hotel price 100€
1. Calculation +20%
2. Calculation +30€
3. Calculation +10%
100 + (100*0.2) + 30 + ((100 + (100*0.2) + 30)*0.1) = 180
false
Example:
hotel price 100€
1. Calculation +20%
2. Calculation +30€
4. Calculation +10%
100 + (100*0.2) + 30 + (100*0.1) = 160
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="SchemaVersion" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation xml:lang="de">
Das SchemaVersion-Attribut legt fest, mit welcher Schema-Version die EDF-Datei kompatibel ist.
					</xs:documentation>
					<xs:documentation xml:lang="en">
The SchemaVersion attribute specifies with which schema version the EDF file is compatible.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="CreationDate" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation xml:lang="de">
Das CreationDate-Attribut legt Datum und Uhrzeit der Erstellung der EDF-Datei fest.
					</xs:documentation>
					<xs:documentation xml:lang="en">
The CreationDate attribute specifies the date and the time for the creation of the EDF file.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="Currency" use="optional">
				<xs:annotation>
					<xs:documentation xml:lang="de">
Das Currency-Attribut legt die Währung der Kalkulationen in dieser EDF-Datei fest.
Die Währung wird als dreistelliger Währungscode nach ISO 4217 angegeben.
Beispiel: EUR für Euro
					</xs:documentation>
					<xs:documentation xml:lang="en">
The Currency attribute specifies the currency of the calculations in this EDF file.
The currency is indicated by a three-digit currency code according to ISO 4217.
Example: EUR for Euros
					</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[A-Z]{3}"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="TourOperatorCode" type="xs:string">
				<xs:annotation>
					<xs:documentation xml:lang="de">
Das Attribut TourOperatorCode transportiert den Veranstaltercode. Wird diese Calculation angewendet, wird dieser Code als Veranstaltercode für alle Hotels zurückgegeben.
Somit überschreibt dieser Code alle anderen TourOperatorCodes aus dem Hotel- und Flug EDF.
					</xs:documentation>
					<xs:documentation xml:lang="en">
The TourOperatorCode attribute is used to specify the tour operator code. If this calculation is used, this code is returned as tour operator code for all hotels.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="Version" type="xs:integer">
				<xs:annotation>
					<xs:documentation xml:lang="de">Das Attribut Version kann dafür genutzt werden um eine Versionsnummer hochzuzählen.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="AirTypeEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Charter" />
			<xs:enumeration value="Scheduled" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ApplianceCodeEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Hotel" />
			<xs:enumeration value="Flight" />
			<xs:enumeration value="Total" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ApplianceTypeEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="TotalPrice" />
			<xs:enumeration value="HotelPrice" />
			<xs:enumeration value="FlightPrice" />
			<xs:enumeration value="FlightBasePrice" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ApplyToEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Arrival" />
			<xs:enumeration value="Stay" />
			<xs:enumeration value="Within" />
			<xs:enumeration value="Departure" />
			<xs:enumeration value="StayNights" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ApplyToModeEnum">
		<xs:annotation>
			<xs:documentation xml:lang="de">Kenner ob zugehörige Angabe sich auf das Hotel oder den Flug beziehen. Steht in Zusammenhang mit ApplyTo.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Hotel" />
			<xs:enumeration value="Flight" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ApplyToWeekdayEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Arrival" />
			<xs:enumeration value="Booking" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ApplianceEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Person" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ChargeStayModeEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None" />
			<xs:enumeration value="Hotel" />
			<xs:enumeration value="Flight" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ChargePersonModeEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None" />
			<xs:enumeration value="PerPerson" />
			<xs:enumeration value="TotalToPerson" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ConflictEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None" />
			<xs:enumeration value="Outbound" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="FlightClassEnum">
		<xs:annotation>
			<xs:documentation />
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="economy" />
			<xs:enumeration value="comfort" />
			<xs:enumeration value="first" />
			<xs:enumeration value="business" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="LocationType">
		<xs:annotation>
			<xs:documentation xml:lang="de">Typ der Regionbeschreibung. 
Folgende Inhalte sind möglich:
Country - Zuordnung des Hotels zu einem Land
Region - Zuordnung des Hotels zu einer Region
City - Zuordnung des Hotels zu einer Stadt
			</xs:documentation>
			<xs:documentation xml:lang="en">
The type of region description. 
The following inputs are possible:
Country - assignment of the hotel to a country
Region - assignment of the hotel to a region
City - assignment of the hotel to a city</xs:documentation>
		</xs:annotation>
		<xs:attribute name="Type" type="LocationTypeEnum">
			<xs:annotation>
				<xs:documentation xml:lang="de">Typ der Regionbeschreibung. 
Folgende Inhalte sind möglich:
Country - Zuordnung des Hotels zu einem Land
Region - Zuordnung des Hotels zu einer Region
City - Zuordnung des Hotels zu einer Stadt

Beispiel:
/GeoInfos
  /Location Code="E" Type="Country" /
  /Location Code="BALE" Type="Region" /
  /Location Code="" Type="City" /
  /GeoCode Latitude="39.5242" Longitude="2.7415" /
/GeoInfos
				</xs:documentation>
				<xs:documentation xml:lang="en">
The type of region description. 
The following inputs are possible:
Country - assignment of the hotel to a country
Region - assignment of the hotel to a region
City - assignment of the hotel to a city

Example:
/GeoInfos
  /Location Code="E" Type="Country" /
  /Location Code="BALE" Type="Region" /
  /Location Code="" Type="City" /
  /GeoCode Latitude="39.5242" Longitude="2.7415" /
/GeoInfos</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Code" type="xs:string">
			<xs:annotation>
				<xs:documentation xml:lang="de">Abkürzung der Regionsbeschreibung, beispielsweise PMI oder E.
Dieser Code ist der veranstalterinterne Code. Mit der Umstellung auf den DRV GlobalTypes Standard wird dieser Code nicht mehr notwendig sein.

Beispiel:
/GeoInfos
  /Location Code="E" Type="Country" /
  /Location Code="BALE" Type="Region" /
  /Location Code="" Type="City" /
  /GeoCode Latitude="39.5242" Longitude="2.7415" /
/GeoInfos
				</xs:documentation>
				<xs:documentation xml:lang="en">
The abbreviation of a region description, e. g. PMI or E.
This code is the tour operator-internal code. With transition to the DRV GlobalTypes standard, this code is no longer necessary.

Example:
/GeoInfos
  /Location Code="E" Type="Country" /
  /Location Code="BALE" Type="Region" /
  /Location Code="" Type="City" /
  /GeoCode Latitude="39.5242" Longitude="2.7415" /
/GeoInfos</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:simpleType name="LocationTypeEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Country" />
			<xs:enumeration value="Region" />
			<xs:enumeration value="City" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ModeEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Fix" />
			<xs:enumeration value="AbsoluteRelative" />
			<xs:enumeration value="RelativeAbsolute" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="OperatorEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="AND" />
			<xs:enumeration value="OR" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PersonTypeDefinitionPersonTypeEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="A" />
			<xs:enumeration value="C" />
			<xs:enumeration value="I" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PersonTypeEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="A" />
			<xs:enumeration value="C" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PriceApplyToModeEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="MaxAgePerson" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RoundingEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Up" />
			<xs:enumeration value="Down" />
			<xs:enumeration value="Commercial" />
			<xs:enumeration value="No" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ScopeEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Final" />
			<xs:enumeration value="Person" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StayModeEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Hotel" />
			<xs:enumeration value="Flight" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="MandatoryEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Include" />
			<xs:enumeration value="Exclude" />
			<xs:enumeration value="False" />
			<xs:enumeration value="True" />
			<xs:enumeration value="Disabled" />
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="Sources">
		<xs:annotation>
			<xs:documentation xml:lang="de">
Das Element Sources definiert die Quelle eines Fluges oder Hotels. 

Das Element ist optional. Es steuert, für welche Flug- und Hotelquellen eine Kalkulation gültig ist.

Mögliche Flugquellen sind zum Beispiel:

- Published
- Pooling

Mögliche Hotelquellen sind zum Beispiel:

- Hotelbeds


Gibt es keine Einschränkungen, d.h. die Regel gilt für alle Flug- und Hotelquellen, dann ist das Element "Sources" nicht zu schreiben. 

Wenn die Regel lediglich für eine oder zwei Flug- oder Hotelquellen gültig ist, dann sind diese explizit über das Attribut "Source" zu nennen. 


Beispiel: Die Regel ist nur gültig für Pooling Flüge

FlightRestrictions

  FlightRestriction

	Sources

	  Source ID=Pooling

   /Sources

 /FlightRestriction 

/FlightRestrictions

Hotelquellen werden unter HotelRestrictions angegeben.
			</xs:documentation>
			<xs:documentation xml:lang="en">
The Sources element defines the source of a flight or a hotel. 

The element is optional. It defines which flight and hotel sources a calculation applies to.

Possible flight sources:

- Published
- Pooling

Possible hotel sources:

- Hotelbeds


If there are no restrictions, i. e. the rule applies to all flight and hotel sources, the Sources element must not be defined. 

If the rule only applies to one or two flight or hotel sources, those sources must be explicitly specified via the Source attribute. 


Example: The rule is only valid for pooling flights

FlightRestrictions

  FlightRestriction

	Sources

	  Source ID=Pooling

   /Sources

 /FlightRestriction 

/FlightRestrictions

Hotel sources are specified under HotelRestrictions.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Source" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation xml:lang="de">
Das Element Source definiert die Quelle eines Fluges oder Hotels. 

Das Element ist optional. Es steuert, für welche Flug- und Hotelquellen eine Kalkulation gültig ist.

Mögliche Flugquellen sind zum Beispiel:

- Published
- Pooling

Mögliche Hotelquellen sind zum Beispiel:

- Hotelbeds


Gibt es keine Einschränkungen, d.h. die Regel gilt für alle Flug- und Hotelquellen, dann ist das Element "Sources" nicht zu schreiben. 

Wenn die Regel lediglich für eine oder zwei Flug- oder Hotelquellen gültig ist, dann sind diese explizit über das Attribut "Source" zu nennen. 


Beispiel: Die Regel ist nur gültig für Pooling Flüge

FlightRestrictions

  FlightRestriction

	Sources

	  Source ID=Pooling

   /Sources

 /FlightRestriction 

/FlightRestrictions

Hotelquellen werden unter HotelRestrictions angegeben.
						</xs:documentation>
						<xs:documentation xml:lang="en">
The Source element defines the source of a flight or a hotel. 

The element is optional. It defines which flight and hotel sources a calculation applies to.

Possible flight sources:

- Published
- Pooling

Possible hotel sources:

- Hotelbeds


If there are no restrictions, i. e. the rule applies to all flight and hotel sources, the Sources element must not be defined. 

If the rule only applies to one or two flight or hotel sources, those sources must be explicitly specified via the Source attribute. 


Example: The rule is only valid for pooling flights

FlightRestrictions

  FlightRestriction

	Sources

	  Source ID=Pooling

   /Sources

 /FlightRestriction 

/FlightRestrictions

Hotel sources are specified under HotelRestrictions.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:attribute name="ID" type="xs:string">
							<xs:annotation>
								<xs:documentation xml:lang="de">
Das Attribut "ID" beihnaltet den Langnamen der Quelle eines Fluges oder Hotels.

Hier wird der Langtext der Quelle übergeben. Z.B.:

- Published

- Hotelbeds



Beispiel: Die Regel ist nur gültig für Pooling Flüge

FlightRestrictions

  FlightRestriction

	Sources

	  Source ID="Pooling"

   /Sources

 /FlightRestriction 

/FlightRestrictions
								</xs:documentation>
								<xs:documentation xml:lang="en">
The ID attribute includes the long name of a flight or hotel source.

Here, the long description of the source is passed in. For example:

- Published

- Hotelbeds



Example: The rule is only valid for pooling flights

FlightRestrictions

  FlightRestriction

	Sources

	  Source ID="Pooling"

   /Sources

 /FlightRestriction 

/FlightRestrictions</xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Rounding">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Appliances" minOccurs="0" maxOccurs="1">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Appliance" minOccurs="1" maxOccurs="unbounded">
								<xs:complexType>
									<xs:attribute name="Code" type="ApplianceCodeEnum">
										<xs:annotation>
											<xs:documentation xml:lang="de">
Das Code-Attribut legt fest, welcher Preis gerundet werden soll.

Mögliche Werte:
* Flight: Der Flugpreis soll gerundet werden.
* Hotel: Der Hotelpreis soll gerundet werden.
* Total: Der Gesamtpreis soll gerundet werden.
											</xs:documentation>
											<xs:documentation xml:lang="en">
The Code attribute specifies which price has to be rounded.

Possible values:
* Flight: Apply the rounding to the flight price.
* Hotel: Apply the rounding to the hotel price.
* Total: Apply the rounding to the total price.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="Mode" type="RoundingEnum" default="No">
				<xs:annotation>
					<xs:documentation xml:lang="de">
Das Mode-Attribut legt fest, wie gerundet wird.

Mögliche Werte:
* Up: aufrunden
* Down: abrunden
* Commercial: kaufmännisch runden
* No: nicht runden
					</xs:documentation>
					<xs:documentation xml:lang="en">
The Mode specifies how a number is rounded.

Possible values:
* Up: round up
* Down: round down
* Commercial: round to two positions after the decimal point
* No: no rounding
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="DecimalPlace" default="0">
				<xs:annotation>
					<xs:documentation xml:lang="de">
Das DecimalPlace-Attribut legt die Anzahl der Nachkommastellen fest.

Der Wert 0 bedeutet, dass auf eine Ganzzahl gerundet wird.
					</xs:documentation>
					<xs:documentation xml:lang="en">
The DecimalPlace attribute specifies the number of decimal places.

The value 0 means rounding to an integer value.
					</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:unsignedInt">
						<xs:maxInclusive value="7" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Scope" type="ScopeEnum">
				<xs:annotation>
					<xs:documentation xml:lang="de">
Scope - gibt an, wann gerundet werden soll.

Mögliche Werte:
Final -  am Ende wird gerundet (Defaultwert)
Person - pro Person wird gerundet
					</xs:documentation>
					<xs:documentation xml:lang="en">
Scope - specifies when to round.

Possible values:
Final - rounding takes place at the end (default)
Person - rounding per person</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
</xs:schema>
